<火山程序 类型 = "通常" 版本 = 1 />

包 火山.Asio2网络 <注释 = "https://github.com/SaierMe/piv" 注释 = "" @视窗.头文件搜寻目录 = "asio2\r\nasio2\\3rd"
        "@视窗.外部头文件.全局-100" = "<malloc.h>\r\n<chrono>" "@视窗.外部头文件.全局-111" = "src\\piv_string.hpp"
        "//@视窗.外部头文件" = "asio2\\piv_asio2.hpp" @视窗.外部头文件 = "<asio2/asio2.hpp>"
        @视窗.附加编译参数 = "cpp: /std:c++17 /bigobj" @视窗.预定义宏 = "ASIO2_ENABLE_SSL" @视窗.头文件搜寻目录 = "OpenSSL\\include"
        @视窗.外部库 = "OpenSSL\\lib\\$(p)\\libcrypto.lib\r\nOpenSSL\\lib\\$(p)\\libssl.lib\r\nCrypt32.lib"
        @视窗.附属文件.win32 = "OpenSSL\\lib\\win32\\libcrypto-3.dll\nOpenSSL\\lib\\win32\\libssl-3.dll"
        @视窗.附属文件.x64 = "OpenSSL\\lib\\x64\\libcrypto-3-x64.dll\nOpenSSL\\lib\\x64\\libssl-3-x64.dll">

# 实用工具 ===

类 ASIO2 <公开 @禁止创建对象 = 真>
{

    # 通用命令 ---

    方法 取最后错误 <公开 静态 类型 = 整数 注释 = "返回Asio2在当前线程的最后错误代码,0表示成功." 折叠 @嵌入式方法 = "">
    {
        @ asio2::last_error_val()
    }

    方法 取最后错误信息 <公开 静态 类型 = 文本型 注释 = "返回Asio2在当前线程的最后错误信息" 折叠 @嵌入式方法 = "">
    {
        @ PivA2Ws{asio2::get_last_error_msg()}
    }

    # 一键执行 ---

    方法 Ping <公开 静态 类型 = ASIO2_IMCP报文 注释 = "对指定的主机执行一次IMCP Ping测试" 折叠 @嵌入式方法 = "">
    参数 主机 <注释 = "所欲测试的主机名、域名、IPv4地址;" 注释 = "建议类型: 文本型、标准文本类U、文本视图类U、字节集类(UTF-8);"
            注释 = "注意: 主机地址不能包含协议和端口号." @匹配类型 = 通用型>
    参数 超时时间 <类型 = 长整数 注释 = "等待主机回复的超时时间(单位为毫秒),超时表示这次Ping失败." @默认值 = 4000>
    {
        @ asio2::ping::execute(PivS2V{@<主机>}, std::chrono::milliseconds(@<超时时间>))
    }

    方法 网页访问 <公开 静态 类型 = ASIO2_HTTP响应 注释 = "注意: 本方法不支持自动重定向和补全协议头,不建议使用." @嵌入式方法 = "">
    参数 请求参数 <类型 = ASIO2_HTTP请求>
    参数 超时时间 <类型 = 整数 @默认值 = 15000>
    {
        @ asio2::https_client::execute(@<请求参数>, std::chrono::milliseconds(@<超时时间>), nullptr)
    }

    #
    #
    # 实用工具 ---

    方法 "//创建响应" <公开 静态 类型 = ASIO2_HTTP响应类 注释 = "从URI(统一资源标识符)创建一个典型的HTTP响应结构." 折叠 @嵌入式方法 = "">
    参数 URI <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    {
        @ @dt<ASIO2_HTTP响应类>{asio2::http::make_response(PivS2V{@<URI>})}
    }

    方法 "//创建响应EX" <公开 静态 类型 = ASIO2_HTTP响应类 注释 = "从指定的参数创建一个典型的HTTP响应结构." 注释 = "注意: 本方法不会自动URL编码." 折叠
            @嵌入式方法 = "">
    参数 状态码 <类型 = 整数 注释 = "提供目标主机的端口号;" 注释 = "如果\"主机\"提供了HTTP协议,本参数可能会被忽略.">
    参数 消息体 <注释 = "" 注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 版本 <类型 = 整数 注释 = "所欲使用的HTTP版本,默认值11表示\"HTTP/1.1\";" 注释 = " 主版本号 = 版本 / 10;" 注释 = " 次版本号 = 版本 % 10;"
            @默认值 = 11>
    {
        @ @dt<ASIO2_HTTP响应类>{asio2::http::make_response(static_cast<unsigned>(@<状态码>)
        @                   PivS2V{@<消息体>}, static_cast<unsigned>(@<版本>))}
    }

    # URL编解码 ---

    方法 URL编码 <公开 静态 类型 = 标准文本类U 注释 = "编码提供的URL文本." 注释 = "注意: 本方法不会编码保留字符(;/?:@=&)" 折叠 @嵌入式方法 = "">
    参数 URL文本 <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 偏移位置 <类型 = 整数 注释 = "从哪个位置开始编码" @默认值 = 0>
    {
        @ @dt<标准文本类U>{asio2::http::url_encode(PivS2V{@<URL文本>}, static_cast<size_t>(@<偏移位置>))}
    }

    方法 URL解码 <公开 静态 类型 = 标准文本类U 注释 = "解码提供的URL编码文本" 折叠 @嵌入式方法 = "">
    参数 欲解码数据 <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    {
        @ @dt<标准文本类U>{asio2::http::url_decode(PivS2V{@<欲解码数据>})}
    }

    方法 是否有未编码字符 <公开 静态 类型 = 逻辑型 注释 = "检查指定的文本是否有未被URL编码的字符" 折叠 @嵌入式方法 = "">
    参数 URL文本 <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 偏移位置 <类型 = 整数 注释 = "从哪个位置开始编码" @默认值 = 0>
    {
        @ asio2::http::has_unencode_char(PivS2V{@<URL文本>}, static_cast<size_t>(@<偏移位置>))
    }

    方法 是否有未解码字符 <公开 静态 类型 = 逻辑型 注释 = "检查指定的文本是否有未被解码的URL编码字符" 折叠 @嵌入式方法 = "">
    参数 URL文本 <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 偏移位置 <类型 = 整数 注释 = "从哪个位置开始编码" @默认值 = 0>
    {
        @ asio2::http::has_undecode_char(PivS2V{@<URL文本>}, static_cast<size_t>(@<偏移位置>))
    }

    # URL ---

    方法 URL匹配 <公开 静态 类型 = 逻辑型 注释 = "使用通配符检查提供的URL路径是否符合指定的匹配格式" 折叠 @嵌入式方法 = "">
    参数 匹配格式 <注释 = "支持通配符\'*\',比如\"/get*\"可以匹配所有以\"/get\"开头的URL路径;"
            注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 URL路径 <注释 = "所欲匹配的URL路径" 注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    {
        @ asio2::http::url_match(PivS2V{@<匹配格式>, PivS2V{@<URL路径>})
    }

    # ---

    方法 生成错误页 <公开 静态 类型 = 标准文本类U 注释 = "通过指定的HTTP状态码和错误描述,创建一个简单的错误网页内容." 折叠 @嵌入式方法 = "">
    参数 状态码 <类型 = ASIO2_状态码>
    参数 错误描述 <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    {
        @ @dt<标准文本类U>{asio2::http::make_error_page(asio2::http::int_to_status(static_cast<unsigned>(@<状态码>)), PivS2V{@<错误描述>})}
    }

    方法 取HTTP动词 <公开 静态 类型 = 文本视图类U 注释 = "返回指定HTTP请求方法的动词文本" 折叠 @禁止流程检查 = 真>
    参数 请求方法 <类型 = ASIO2_请求方法>
    {
        @ @dt<文本视图类U>{asio2::http::to_string(static_cast<asio2::http::verb>(@<请求方法>))}
    }

    方法 取请求方法 <公开 静态 类型 = ASIO2_请求方法 注释 = "通过HTTP动词返回对应的\"Asio2_请求方法\"常量值" 折叠 @嵌入式方法 = "">
    参数 HTTP动词 <注释 = "注意HTTP动词必须为大写单词;" 注释 = "建议类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    {
        @ asio2::http::string_to_verb(PivS2V{@<HTTP动词>})
    }

    方法 取字段名 <公开 静态 类型 = 文本视图类U 注释 = "返回指定字段常量的文本名称" 折叠 @禁止流程检查 = 真>
    参数 字段常量 <类型 = ASIO2_头字段>
    {
        @ @dt<文本视图类U>{asio2::http::to_string(static_cast<asio2::http::field>(@<字段常量>))}
    }

    方法 取字段常量 <公开 静态 类型 = ASIO2_头字段 注释 = "通过字段名返回对应的\"Asio2_头字段\"常量值,返回0表示名称不在常量列表内." 折叠 @嵌入式方法 = "">
    参数 字段名 <注释 = "提供头字段名称,大小写不敏感;" 注释 = "注意字段名称只有\'-\'符号,使用\'_\'是错误的;"
            注释 = "建议类型: 文本视图类U、标准文本类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    {
        @ static_cast<INT>(asio2::http::string_to_field(PivS2V{@<字段名>}))
    }
}

# IMCP客户端 ===

类 ASIO2_PING客户端 <公开 注释 = "使用IMCP协议进行Ping测试,可用于判断目标主机的连通状况." 注释 = " 1. 本类只支持IPv4地址,无法处理IPv6地址;"
        注释 = " 2. 本类的接收事件和回调都属于同一子线程,如需操作界面请用" 注释 = "\"高级主线程处理器\";" 折叠 @输出名 = "PivPinger"
        @视窗.后缀文本 = "public asio2::ping_t<PivPinger>">
{
    方法 启动 <公开 类型 = 逻辑型 注释 = "开始Ping指定的主机,如需指定次数请先\"置发送次数\"." 注释 = "每次Ping测试的结果将在\"收到回复\"事件中接收." 折叠
            @嵌入式方法 = "">
    参数 主机 <注释 = "所欲测试的主机名、域名、IP地址,支持类型:" 注释 = " 文本型、标准文本类U、文本视图类U、字节集类(UTF-8);" 注释 = "注意: 主机地址不能包含协议和端口."
            @匹配类型 = 通用型>
    {
        @ @sn<this>.start<std::string_view&>(PivS2V{@<主机>})
    }

    方法 停止 <公开 注释 = "停止Ping测试" 折叠 @嵌入式方法 = "">
    {
        @ @sn<this>.stop()
    }

    方法 销毁 <公开 注释 = "销毁本实例所有成员变量的内容,本方法用于解决内存泄漏,调用后将不能再使用本实例." 注释 = "注意: 必须在停止状态下使用,否则会导致程序崩溃." 折叠
            @嵌入式方法 = "">
    {
        @ @sn<this>.destroy()
    }

    方法 是否启动 <公开 类型 = 逻辑型 注释 = "返回Ping客户端是否已启动" 折叠 @嵌入式方法 = "">
    {
        @ @sn<this>.is_started()
    }

    方法 是否停止 <公开 类型 = 逻辑型 注释 = "返回Ping客户端是否已停止" 折叠 @嵌入式方法 = "">
    {
        @ @sn<this>.is_stopped()
    }

    # ---

    方法 收到回复 <公开 定义事件 类型 = 整数 注释 = "当每次收到Ping请求的回复后发送此事件." 注释 = "本事件始终在多线程中接收." 返回值注释 = "此返回值无意义">
    参数 回复报文 <类型 = ASIO2_IMCP报文 注释 = "包含了当前一次Ping测试的所有结果">

    方法 初始化完毕 <公开 定义事件 类型 = 整数 注释 = "当Socket被打开之后发送此事件,可用于设置Socket的选项." 注释 = "本事件始终在多线程中接收."
            返回值注释 = "此返回值无意义">

    方法 被启动 <公开 定义事件 类型 = 整数 注释 = "当执行\"启动\"之后,无论是否启动成功都会发送此事件." 注释 = "本事件始终在多线程中接收." 返回值注释 = "此返回值无意义">

    方法 即将停止 <公开 定义事件 类型 = 整数 注释 = "当Ping测试即将停止之前发送此事件." 注释 = "本事件始终在多线程中接收." 返回值注释 = "此返回值无意义">

    # ---

    方法 绑定接收回调 <公开 类型 = ASIO2_PING客户端 注释 = "绑定自定义的收到回复事件监听函数,每次收到Ping请求的回复后触发回调."
            注释 = "注意: 绑定后将不再发送\"收到回复\"事件." 注释 = "调用例子: ping.绑定接收回调 (绑定静态方法 (接收函数, 占位符_1 (Asio2_IMCP响应类)))"
            返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 回调函数 <类型 = 函数对象类 注释 = "必须使用下列方法之一绑定回调函数:" 注释 = " - 绑定静态方法   绑定动态方法"
            注释 = " 绑定时必须有一个参数是: 占位符_1 (Asio2_IMCP响应类)" 注释 = " 函数对象类型: std::function<void(Asio2_IMCP响应类&)>">
    {
        @ @sn<this>.bind_recv(@<回调函数>)
    }

    方法 绑定初始化回调 <公开 类型 = ASIO2_PING客户端 注释 = "绑定自定义的初始化事件监听函数,当Socket被打开之后触发回调."
            注释 = "注意: 绑定后将不再发送\"初始化完毕\"事件." 返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 回调函数 <类型 = 函数对象类 注释 = "提供所欲绑定的函数对象,可以调用下列方法创建:" 注释 = " - 绑定静态方法   绑定无参数静态方法"
            注释 = " - 绑定动态方法   绑定无参数动态方法" 注释 = " 函数对象类型: std::function<void()>">
    {
        @ @sn<this>.bind_init(@<回调函数>)
    }

    方法 绑定启动回调 <公开 类型 = ASIO2_PING客户端 注释 = "绑定自定义的启动事件监听函数,在启动Ping测试之后触发回调." 注释 = "注意: 绑定后将不再发送\"被启动\"事件."
            返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 回调函数 <类型 = 函数对象类 注释 = "提供所欲绑定的函数对象,可以调用下列方法创建:" 注释 = " - 绑定静态方法   绑定无参数静态方法"
            注释 = " - 绑定动态方法   绑定无参数动态方法" 注释 = " 函数对象类型: std::function<void()>">
    {
        @ @sn<this>.bind_start(@<回调函数>)
    }

    方法 绑定停止回调 <公开 类型 = ASIO2_PING客户端 注释 = "绑定自定义的停止事件监听函数,在停止Ping测试之前触发回调." 注释 = "注意: 绑定后将不再发送\"即将停止\"事件."
            返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 回调函数 <类型 = 函数对象类 注释 = "提供所欲绑定的函数对象,可以调用下列方法创建:" 注释 = " - 绑定静态方法   绑定无参数静态方法"
            注释 = " - 绑定动态方法   绑定无参数动态方法" 注释 = " 函数对象类型:  std::function<void()>">
    {
        @ @sn<this>.bind_stop(@<回调函数>)
    }

    方法 绑定接收事件 <公开 注释 = "将所有的回调函数绑定到本对象的接收事件中,将覆盖其他\"绑定XX回调\"的操作." 注释 = "注意: 本方法在类初始化时自动执行." 折叠>
    {
        @ this->bind_recv(&@sn<current_class>::@<收到回复>, this);
        @ this->bind_init(&@sn<current_class>::@<初始化完毕>, this);
        @ this->bind_start(&@sn<current_class>::@<被启动>, this);
        @ this->bind_stop(&@sn<current_class>::@<即将停止>, this);
    }

    # ---

    方法 置标识符 <公开 类型 = ASIO2_PING客户端 注释 = "设置ICMP协议的标识符,默认为当前类实例指针的前2个字节." 返回值注释 = "返回自身,可以链式调用." 折叠
            @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 识别符 <类型 = 整数>
    {
        @ @sn<this>.set_identifier(@<识别符>)
    }

    方法 置超时时间 <公开 类型 = ASIO2_PING客户端 注释 = "设置等待每次回复的超时时间,默认为4秒." 返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = ""
            @视窗.返回参考 = 真>
    参数 时间 <类型 = 长整数 注释 = "单位为毫秒">
    {
        @ @sn<this>.set_timeout(std::chrono::milliseconds(@<时间>))
    }

    方法 置间隔时间 <公开 类型 = ASIO2_PING客户端 注释 = "设置两次Ping之间的间隔时间,默认为1秒." 返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = ""
            @视窗.返回参考 = 真>
    参数 时间 <类型 = 长整数 注释 = "两次Ping之间的间隔时间,单位为毫秒.">
    {
        @ @sn<this>.set_interval(std::chrono::milliseconds(@<时间>))
    }

    方法 置发送次数 <公开 类型 = ASIO2_PING客户端 注释 = "设置发送Ping的请求次数." 注释 = "默认将持续Ping指定的主机,直到停止."
            返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 次数 <类型 = 变整数 注释 = "发送的回显请求次数,-1表示不限制次数.">
    {
        @ @sn<this>.set_ncount(static_cast<size_t>(@<次数>))
    }

    方法 置有效载荷 <公开 类型 = ASIO2_PING客户端 注释 = "设置IMCP协议的有效载荷主体." 注释 = "默认主体: \"Hello!\" from Asio ping."
            返回值注释 = "返回自身,可以链式调用." 折叠 @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 有效载荷 <注释 = "支持类型: 文本型、标准文本类U、文本视图类U、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @sn<this>.set_body(PivS2V{@<有效载荷>})
    }

    # ---

    方法 标识符 <公开 属性写 注释 = "设置ICMP协议的标识符,默认为当前类实例指针的前2个字节." 折叠>
    参数 新识别符 <类型 = 整数>
    {
        @ set_identifier(@<新识别符>);
    }

    方法 超时时间 <公开 属性写 注释 = "设置等待每次回复的超时时间,默认为4秒." 折叠>
    参数 时间 <类型 = 长整数 注释 = "单位为毫秒">
    {
        @ set_timeout(std::chrono::milliseconds(@<时间>));
    }

    方法 间隔时间 <公开 属性写 注释 = "设置两次Ping之间的间隔时间,默认为1秒." 折叠>
    参数 时间 <类型 = 长整数 注释 = "两次Ping之间的间隔时间,单位为毫秒.">
    {
        @ set_interval(std::chrono::milliseconds(@<时间>));
    }

    方法 发送次数 <公开 属性写 注释 = "设置发送Ping的请求次数." 注释 = "默认将持续Ping指定的主机,直到停止." 折叠>
    参数 新次数 <类型 = 变整数 注释 = "发送的回显请求次数,-1表示不限制次数.">
    {
        @ set_ncount(static_cast<size_t>(@<新次数>));
    }

    # ---

    方法 标识符 <公开 属性读 类型 = 整数 注释 = "返回ICMP协议的标识符,默认为当前类实例指针的前2个字节." 折叠 @嵌入式方法 = "">
    {
        @ static_cast<INT>( @sn<this>.get_identifier()
    }

    方法 超时时间 <公开 属性读 类型 = 长整数 注释 = "返回等待每次回复的超时时间(单位为毫秒)" 折叠 @嵌入式方法 = "">
    {
        @ @sn<this>.get_timeout().count() / 1000000
    }

    方法 间隔时间 <公开 属性读 类型 = 长整数 注释 = "返回两次Ping之间的间隔时间(单位为毫秒)" 折叠 @嵌入式方法 = "">
    {
        @ @sn<this>.get_interval().count() / 1000000
    }

    方法 主机IP <公开 属性读 类型 = 文本型 注释 = "返回当前Ping测试的目标主机IPv4地址" 折叠 @嵌入式方法 = "">
    {
        @ PivU2Ws{@sn<this>.get_host_ip()}
    }

    方法 发送总数 <公开 属性读 类型 = 长整数 注释 = "返回已发送回显数据包的总数" 折叠 @嵌入式方法 = "">
    {
        @ (INT64)@sn<this>.get_total_send()
    }

    方法 接收总数 <公开 属性读 类型 = 长整数 注释 = "返回已收到的回复数据包总数" 折叠 @嵌入式方法 = "">
    {
        @ (INT64)@sn<this>.get_total_recv()
    }

    方法 丢失总数 <公开 属性读 类型 = 长整数 注释 = "返回丢失的数据包总数" 折叠>
    {
        返回 (发送总数 - 接收总数)
    }

    方法 丢包率 <公开 属性读 类型 = 小数 注释 = "返回数据包的丢失率(丢包率)" 折叠 @嵌入式方法 = "">
    {
        @ @sn<this>.get_plp()
    }

    方法 平均延迟 <公开 属性读 类型 = 长整数 注释 = "返回接收回复数据包时经过的平均持续时间(单位为毫秒)" 折叠 @嵌入式方法 = "">
    {
        @ std::chrono::duration_cast<std::chrono::milliseconds>(@sn<this>.get_avg_lag()).count()
    }

    方法 数据包大小 <公开 属性读 类型 = 整数 注释 = "返回发送数据包的字节大小,最大值为65500." 折叠 @禁止流程检查 = 真>
    {
        @ return static_cast<int32_t>(this->body_.size() + 8);
    }

    # ---

    方法 类_初始化 <折叠>
    {
        本对象.绑定接收事件 ()
    }

    方法 类_清理 <折叠>
    {
        本对象.停止 ()
        本对象.销毁 ()
    }
}

类 ASIO2_IMCP报文 <公开 基础类 = PIV本地类模板 注释 = "IMCP Ping的回复报文" 折叠 @文档 = "category = \"辅助类\""
        @别名 = "asio2::icmp_rep" @模板实现类 = "ASIO2_IMCP报文">
{

    # Ping ---

    方法 取回显文本 <公开 静态 类型 = 文本型 注释 = "获取当前Ping的回显文本,格式如下:" 注释 = " 来自 192.168.1.1 的回复: 字节=32 时间=1ms TTL=54" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        如果 (欲操作本对象.是否超时 == 真)
        {
            返回 ("请求超时。")
        }
        否则
        {
            如果 (欲操作本对象.时间 > 0)
            {
                返回 (取格式文本 ("来自 %s 的回复: 字节=%d 时间=%I64dms TTL=%d", 欲操作本对象.来源地址, 欲操作本对象.报文长度, 欲操作本对象.时间, 欲操作本对象.TTL))
            }
            否则
            {
                返回 (取格式文本 ("来自 %s 的回复: 字节=%d 时间<1ms TTL=%d", 欲操作本对象.来源地址, 欲操作本对象.报文长度, 欲操作本对象.TTL))
            }
        }
    }

    方法 是否超时 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回当前Ping是否超时,已超时返回真." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ @<欲操作本对象>.is_timeout()
    }

    方法 时间 <公开 静态 属性读 类型 = 长整数 注释 = "返回当前Ping的往返行程耗时,单位为毫秒." 返回值注释 = "返回-1表示已超时" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ @<欲操作本对象>.milliseconds()
    }

    方法 报文长度 <公开 静态 属性读 类型 = 整数 注释 = "返回IMCP报文的数据长度" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        返回 (欲操作本对象.总长度 - 欲操作本对象.头长度)
    }

    # IPv4

    方法 来源地址 <公开 静态 属性读 类型 = 文本型 注释 = "返回来源IPv4地址" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ PivU2Ws{@<欲操作本对象>.source_address().to_string()}
    }

    方法 目标地址 <公开 静态 属性读 类型 = 文本型 注释 = "返回目标IPv4地址" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ PivU2Ws{@<欲操作本对象>.destination_address().to_string()}
    }

    方法 版本 <公开 静态 属性读 类型 = 短整数 注释 = "返回IPv4的版本,一般是4" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<SHORT>(@<欲操作本对象>.version())
    }

    方法 头长度 <公开 静态 属性读 类型 = 整数 注释 = "返回IPv4数据包的协议头长度" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.header_length())
    }

    方法 服务类型 <公开 静态 属性读 类型 = 短整数 注释 = "指出上层协议对处理当前数据报所期望的服务质量,并对数据报按照重要性级别进行分配." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<SHORT>(@<欲操作本对象>.type_of_service())
    }

    方法 总长度 <公开 静态 属性读 类型 = 整数 注释 = "整个IPv4数据包的字节长度,包括数据和协议头." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.total_length())
    }

    方法 标识 <公开 静态 属性读 类型 = 整数 注释 = "返回IPv4包头的标识,用于识别当前数据报." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.identification())
    }

    方法 不分片 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回是否不分片" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ @<欲操作本对象>.dont_fragment()
    }

    方法 更多分片 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回是否有更多分片" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ @<欲操作本对象>.more_fragments()
    }

    方法 分片偏移 <公开 静态 属性读 类型 = 整数 注释 = "指出与源数据报的起始端相关的分片数据位置" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.fragment_offset())
    }

    方法 TTL <公开 静态 属性读 类型 = 整数 注释 = "IPv4的生存时间TTL" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.time_to_live())
    }

    方法 协议 <公开 静态 属性读 类型 = 短整数 注释 = "返回上层协议" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<SHORT>(@<欲操作本对象>.protocol())
    }

    方法 头校验和 <公开 静态 属性读 类型 = 整数 注释 = "返回IPv4协议头的校验和" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.header_checksum())
    }

    # ICMP

    方法 报文类型 <公开 静态 属性读 类型 = 短整数 注释 = "返回ICMP报文的类型" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<SHORT>(@<欲操作本对象>.type())
    }

    方法 报文代码 <公开 静态 属性读 类型 = 短整数 注释 = "返回ICMP报文的代码" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<SHORT>(@<欲操作本对象>.code())
    }

    方法 报文校验和 <公开 静态 属性读 类型 = 整数 注释 = "返回ICMP报文的校验和" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.checksum())
    }

    方法 报文标识符 <公开 静态 属性读 类型 = 整数 注释 = "返回ICMP报文的标识符" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.identifier())
    }

    方法 报文序号 <公开 静态 属性读 类型 = 整数 注释 = "返回ICMP报文的序号" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_IMCP报文>
    {
        @ static_cast<INT>(@<欲操作本对象>.sequence_number())
    }
}

# TCP客户端 ===
#

类 ASIO2_客户端基础类 <折叠>
{

    #
}

类 ASIO2_TCP客户端 <公开 基础类 = ASIO2_客户端基础类 折叠>
{
    方法 连接 <公开 定义事件 类型 = 整数>
    {

    }

    方法 断开连接 <公开 定义事件 类型 = 整数>
    {

    }

    #
}

类 ASIO2_HTTP客户端 <公开 基础类 = ASIO2_TCP客户端>
{

    #
}

# 辅助类 ===

类 ASIO2_HTTP请求 <公开 基础类 = PIV本地类模板 注释 = "提供HTTP请求的URI、请求头字段和请求消息体" 折叠 @文档 = "category = \"辅助类\""
        @别名 = "asio2::http::web_request" @模板实现类 = "ASIO2_HTTP请求">
{

    # 静态调用方法 ===

    方法 创建 <公开 静态 类型 = ASIO2_HTTP请求 注释 = "从URI(统一资源标识符)创建一个典型的HTTP请求结构."
            注释 = " 1. 如果提供的文本是URL,必须以http或https开头,如:\"http://www.baidu.com/s?wd=火山视窗\";"
            注释 = " 2. 也可以提供请求标头,如:\"GET / HTTP/1.1\\r\\nHost: www.github.com\\r\\n\\r\\n\";"
            注释 = " 3. 本方法会自动对提供的URI进行URL编码;" 折叠 @嵌入式方法 = "">
    参数 URI <注释 = "推荐类型: 文本视图类U、标准文本类U、字节集类(UTF-8)、文本型" @匹配类型 = 通用型>
    {
        @ asio2::http::make_request<std::string_view&>(PivS2V{@<URI>})
    }

    方法 创建EX <公开 静态 类型 = ASIO2_HTTP请求 注释 = "从指定的参数创建一个典型的HTTP请求结构." 注释 = "注意: 本方法不会对提供的文本进行URL编码." 折叠
            @嵌入式方法 = "">
    参数 主机 <注释 = "提供目标主机域名或IP地址,前面的HTTP协议可选填写;" 注释 = "推荐类型: 文本视图类U、标准文本类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 端口 <类型 = 整数 注释 = "提供目标主机的端口号;" 注释 = "如果\"主机\"参数明确了HTTP协议,本参数值将被忽略." @默认值 = 80>
    参数 目标 <注释 = "提供URL地址的目标(路径+查询参数),必须以\'/\'字符开头;" 注释 = "本方法不会自动进行URL编码,请自行确保提供的参数已被编码;"
            注释 = "推荐类型: 文本视图类U、标准文本类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 请求方法 <类型 = ASIO2_请求方法 注释 = "所欲使用的HTTP请求方法" @默认值 = ASIO2_请求方法.GET>
    参数 版本 <类型 = 整数 注释 = "所欲使用的HTTP版本,默认值11表示\"HTTP/1.1\";" 注释 = " 主版本号 = 版本 / 10;" 注释 = " 次版本号 = 版本 % 10;"
            @默认值 = 11>
    {
        @ asio2::http::make_request<std::string_view&>(PivS2V{@<主机>}, @<端口>, PivS2V{@<目标>},
        @     static_cast<asio2::http::verb>(@<请求方法>), static_cast<unsigned>(@<版本>))
    }

    # 动态调用方法 ===

    方法 重置 <公开 静态 注释 = "将本对象的内容重置为空" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.reset()
    }

    方法 准备有效负载 <公开 静态 注释 = "准备消息体的有效负载字段,应该在设置\"请求头\"和\"置消息体\"后调用本方法."
            注释 = "本方法将根据消息体的属性调整\"Content-Length\"和\"Transfer-Encoding\"的头字段值." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.prepare_payload()
    }

    方法 置请求体 <公开 静态 注释 = "设置请求消息体的内容,即POST/PUT的提交信息." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 新主体 <注释 = "支持任意文本类型和字节集类,推荐类型:" 注释 = " 文本视图类U、标准文本类U、字节集类、文本型" 注释 = "注意: 字节集类以及UTF-8和ANSI的文本将按原样提交,"
            注释 = "而UTF-16LE文本会被转换到UTF-8编码;" 注释 = "如果一定要传输UTF-16LE文本数据,可以使用字节集类传参;" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.body() = PivS2V{@<新主体>}
    }

    方法 取请求体 <公开 静态 类型 = 文本视图类U 注释 = "返回请求消息体的内容." 注释 = "本方法固定返回UTF-8编码文本,如果消息体是其他文本编码或非文本,"
            注释 = "请使用\"取请求体数据\"." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @dt<文本视图类U>{@<欲操作本对象>.body()}
    }

    方法 取请求体数据 <公开 静态 类型 = 字节集类 注释 = "返回请求消息体的字节集内容;" 注释 = "如果消息体不是UTF-8编码文本或非文本数据,可以使用本方法获取数据." 折叠
            @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @an<CVolMem>(@<欲操作本对象>.body().data(), @<欲操作本对象>.body().size());
    }

    方法 取Multipart <公开 静态 类型 = ASIO2_Multipart对象 注释 = "返回\"multipart/form-data\"多部分对象集合的主体内容."
            注释 = "注意: 操作返回值不能修改本类的内容" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.get_multipart()
    }

    方法 请求头 <公开 静态 属性读 类型 = 标准文本容器类U 注释 = "获取所有的请求头字段" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        变量 结果 <类型 = 标准文本容器类U>
        欲操作本对象.枚举请求头 ()
        {
            结果.加入成员 (带参构造对象 (标准文本类U, 欲操作本对象.取枚举字段名 ()).加入文本 (": ").加入文本 (欲操作本对象.取枚举值 ()))
        }
        返回 (结果)
    }

    # 请求头字段 ---

    方法 置请求头 <公开 静态 注释 = "通过字段常量设置其请求头字段值,将覆盖同一头字段的所有值." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲设置的\"Asio2_头字段\"常量">
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.set(static_cast<asio2::http::field>(@<字段名>), PivS2V{@<值>})
    }

    方法 置请求头2 <公开 静态 注释 = "通过字段名设置其请求头字段值,将覆盖同一头字段的所有值." 注释 = "注意: 本方法将不区分名称的大小写替换现有的头字段,"
            注释 = "也可以用来置入不合规范的字段名." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <注释 = "提供所欲设置的字段名,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.set(PivS2V{@<字段名>}, PivS2V{@<值>})
    }

    方法 插入请求头 <公开 静态 注释 = "通过字段常量插入对应的请求头字段值,如果已经有相同的头字段,将插入到它的后面." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲插入的\"Asio2_头字段\"常量">
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.insert(static_cast<asio2::http::field>(@<字段名>), PivS2V{@<值>})
    }

    方法 插入请求头2 <公开 静态 注释 = "通过字段名插入对应的请求头字段值,如果已经有相同的头字段,将插入到它的后面." 注释 = "注意: 本方法支持插入不合规范的头字段名." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <注释 = "提供所欲插入的字段名,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.insert(PivS2V{@<字段名>}, PivS2V{@<值>})
    }

    方法 取请求头值 <公开 静态 类型 = 文本视图类U 注释 = "通过字段常量获取对应的请求头字段值,如果查找的头字段不存在则返回空文本."
            注释 = "注意: 本方法只返回指定头字段的第一个值,如需获取所有值,请用\"枚举指定字段\"." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲取值的\"Asio2_头字段\"常量">
    {
        @ @dt<文本视图类U>{@<欲操作本对象>[static_cast<asio2::http::field>(@<字段名>)]}
    }

    方法 取请求头值2 <公开 静态 类型 = 文本视图类U 注释 = "通过字段名获取对应的请求头字段值,如果查找的头字段不存在则返回空文本."
            注释 = "注意: 本方法只返回指定头字段的第一个值,如需获取所有值,请用\"枚举指定字段\"." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <注释 = "提供所欲取值的字段名,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @dt<文本视图类U>{@<欲操作本对象>[PivS2V{@<字段名>}]}
    }

    方法 删除请求头 <公开 静态 注释 = "通过字段常量删除对应的请求头字段" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲删除的\"Asio2_头字段\"常量">
    {
        @ @<欲操作本对象>.erase(static_cast<asio2::http::field>(@<字段名>))
    }

    方法 删除请求头2 <公开 静态 注释 = "通过字段名删除对应的请求头字段,本方法可以删除不在常量中的字段名." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <注释 = "提供所欲删除的字段名称,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.erase(PivS2V{@<字段名>})
    }

    方法 清空请求头 <公开 静态 注释 = "删除所有的请求头字段" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.clear()
    }

    方法 枚举指定字段 <公开 静态 注释 = "启动一个循环来枚举指定头字段的每一个值,在循环中可以调用" 注释 = "\"取枚举...\"方法来获取当前所枚举到的成员值." 折叠
            @嵌入式方法 = "name = field_iter\r\nhas_loop_body = true">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲插入的\"Asio2_头字段\"常量">
    {
        @ asio2::http::web_request& @sn<rand_name0> = @<欲操作本对象>;
        @ asio2::http::field @sn<rand_name1> = static_cast<asio2::http::field>(@<字段名>);
        @ size_t @sn<rand_name2> = @sn<rand_name0>.count(@sn<rand_name1>);
        @ for (auto _it = @sn<rand_name0>.find(@sn<rand_name1>); @sn<rand_name2> > 0; _it++, @sn<rand_name2>--)
    }

    方法 枚举请求头 <公开 静态 注释 = "启动一个循环来枚举请求头字段列表中的每一个成员,在循环中可以调用" 注释 = "\"取枚举...\"方法来获取当前所枚举到的成员值." 折叠
            @嵌入式方法 = "name = request_iter\r\nhas_loop_body = true">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ asio2::http::web_request& @sn<rand_name0> = @<欲操作本对象>;
        @ for (auto _it = @sn<rand_name0>.begin(); _it != @sn<rand_name0>.end (); _it++)
    }

    方法 取枚举字段名 <公开 静态 类型 = 文本视图类U 注释 = "只能在本类的\"枚举请求头/枚举指定字段\"的子语句体中使用,用作取回当前所枚举到的字段名." 折叠
            @嵌入式方法 = "parent = \"field_iter, request_iter\"">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @dt<文本视图类U>{_it->name_string()}
    }

    方法 取枚举编号 <公开 静态 类型 = ASIO2_头字段 注释 = "只能在本类的\"枚举请求头/枚举指定字段\"的子语句体中使用,用作取回当前所枚举到的字段常量编号."
            注释 = "如果头字段名不在常量列表内,则返回未知(0)." 折叠 @嵌入式方法 = "parent = \"field_iter, request_iter\"">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ static_cast<INT>(_it->name())
    }

    方法 取枚举值 <公开 静态 类型 = 文本视图类U 注释 = "只能在本类的\"枚举请求头/枚举指定字段\"的子语句体中使用,用作取回当前所枚举到的字段值." 折叠
            @嵌入式方法 = "parent = \"field_iter, request_iter\"">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @dt<文本视图类U>{_it->value()}
    }

    # 属性写 ---

    方法 HTTP版本 <公开 静态 属性写 注释 = "设置HTTP版本" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 版本 <类型 = 整数 注释 = "所欲使用的HTTP版本,默认值11表示\"HTTP/1.1\";" 注释 = " 主版本号 = 版本 / 10;" 注释 = " 次版本号 = 版本 % 10;">
    {
        @ @<欲操作本对象>.version(static_cast<unsigned>(@<版本>));
    }

    方法 "// 目标" <公开 静态 属性写 注释 = "!!!设置不生效,屏蔽之!!!" 注释 = "设置请求目标,目标应该由路径和查询参数组成."
            注释 = "注意: 本方法不会对提供的文本进行语法检查,因此用户必须确保" 注释 = "提供的文本符合URI规则,并对地址的保留和特殊字符进行URL编码;"
            注释 = "例子: 请求.目标 = 创建文本视图U (\"/path?key=value\")" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 目标 <类型 = 文本视图类U 注释 = "提供URL地址的目标(路径+查询参数),必须以\'/\'字符开头;" 注释 = "本方法不会自动进行URL编码,请自行确保提供的参数已被编码;">
    {
        @ @<欲操作本对象>.target(@<目标>);
    }

    方法 请求方法 <公开 静态 属性写 注释 = "设置新的HTTP请求方法" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 新方法 <类型 = ASIO2_请求方法>
    {
        @ @<欲操作本对象>.method(static_cast<asio2::http::verb>(@<新方法>));
    }

    方法 HTTP动词 <公开 静态 属性写 注释 = "使用HTTP动词字符串来设置新的HTTP请求方法." 注释 = "例子: 请求.HTTP动词 = 创建文本视图U (\"GET\")" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 新动词 <类型 = 文本视图类U 注释 = "提供新的HTTP动词文本">
    {
        @ @<欲操作本对象>.method_string(@<新动词>);
    }

    方法 分块传输 <公开 静态 属性写 注释 = "设置是否启用分块传输(Transfer-Encoding:chunked)" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 是否启用 <类型 = 逻辑型>
    {
        @ @<欲操作本对象>.chunked(static_cast<bool>(@<是否启用>));
    }

    方法 内容长度 <公开 静态 属性写 注释 = "设置请求内容的长度." 注释 = "注意: 设置内容长度后,将自动禁用分块传输." 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 新长度 <类型 = 长整数>
    {
        @ @<欲操作本对象>.content_length(static_cast<uint64_t>(@<新长度>));
    }

    方法 持久连接 <公开 静态 属性写 注释 = "设置keep-alive消息语义选项." 注释 = "本方法可调整\"连接/Connection\"字段,以指示在相应响应后是否应保持打开连接." 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    参数 是否保持 <类型 = 逻辑型>
    {
        @ @<欲操作本对象>.keep_alive(static_cast<bool>(@<是否保持>));
    }

    # 属性读 ---

    方法 HTTP版本 <公开 静态 属性读 类型 = 整数 注释 = "返回HTTP版本,返回值包含主版本号和次版本号,计算公式如下:" 注释 = " 主版本号 = 版本 / 10;"
            注释 = " 次版本号 = 版本 % 10;" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ static_cast<INT>(@<欲操作本对象>.version())
    }

    方法 是否升级协议 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回是否请求升级协议到WebSocket" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.is_upgrade()
    }

    方法 协议 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回\"协议/scheme\"字段的内容,可能为空."
            注释 = "<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<fragment>" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.get_schema();
    }

    方法 主机 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回\"主机/host\"字段的内容,可能为空."
            注释 = "<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<fragment>" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.get_host();
    }

    方法 端口 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回\"端口/port\"字段的内容,可能为空."
            注释 = "<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<fragment>" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.get_port();
    }

    方法 默认端口 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回所使用\"协议/scheme\"的默认端口号" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.url().get_default_port();
    }

    方法 路径 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回\"路径/path\"字段的内容,可能为空."
            注释 = "<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<fragment>" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.get_path();
    }

    方法 查询参数 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回\"查询参数/query\"字段的内容,可能为空."
            注释 = "<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<fragment>" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.get_query();
    }

    方法 目标 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回\"请求目标/target\",由路径和查询参数组成." 注释 = "注意: 返回的文本可能有未URL解码的字符." 折叠
            @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.url().get_target();
    }

    方法 片段 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回\"片段/fragment\"字段的内容,可能为空."
            注释 = "<scheme>://<user>:<password>@<host>:<port>/<path>;<params>?<query>#<fragment>" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.url().get_field(UF_FRAGMENT);
    }

    方法 拥有Multipart <公开 静态 属性读 类型 = 逻辑型 注释 = "HTTP请求的内容类型为\"multipart/form-data\"多部分对象集合时返回真" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.has_multipart()
    }

    方法 请求方法 <公开 静态 属性读 类型 = ASIO2_请求方法 注释 = "返回所使用的HTTP请求方法" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ static_cast<INT>(@<欲操作本对象>.method())
    }

    方法 HTTP动词 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回所用HTTP请求方法的文本名称" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ return @<欲操作本对象>.method_string();
    }

    方法 分块传输 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回是否启用分块传输(Transfer-Encoding:chunked)" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.chunked()
    }

    方法 有效载荷大小 <公开 静态 属性读 类型 = 长整数 注释 = "返回有效载荷大小,本方法将测量并返回消息体的长度;"
            注释 = "如果没有消息体将返回0,如果存在消息体但启用了分块传输,则返回-1." 注释 = "注: 本方法不会检查\"内容长度/Content-Length\"字段的值." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ static_cast<INT64>(@<欲操作本对象>.payload_size().value_or(-1))
    }

    方法 拥有内容长度 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回真表示存在Content-Length字段;" 注释 = "本方法仅判断是否存在该字段,不会检查消息体的属性值." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.has_content_length()
    }

    方法 持久连接 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回真表示在消息语义中标识了keep-alive" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.keep_alive()
    }

    方法 是否需要EOF <公开 静态 属性读 类型 = 逻辑型 注释 = "返回真表示消息语义需要一个文件结束符(EOF)." 注释 = "对于HTTP请求,此值返回是否持久连接的逻辑取反结果." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        @ @<欲操作本对象>.need_eof()
    }

    方法 "//取展示内容" <公开 静态 类型 = 文本型 注释 = "将本对象中的所有数据用文本方式填入到所提供的文本参数中,用作调试或其它场合展示时使用." 注释 = "" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP请求>
    {
        变量 展示内容 <类型 = 文本型>
        变量 格式文本 <类型 = 文本型
                值 = "<ASIO2 HTTP请求类> 主要调试信息:\r\n1. 主机: %s\r\n2. 端口: %s\r\n3. 目标: %s\r\n4. 请求标头: %s\r\n5. 请求消息体(有效载荷): %s\r\n">
        加入格式文本 (展示内容, 格式文本, 欲操作本对象.主机.到文本型 (), 欲操作本对象.端口.到文本型 (), 欲操作本对象.目标.到文本型 (), 欲操作本对象.请求头, 欲操作本对象.取请求体数据 ())
        返回 (展示内容)
    }
}

类 ASIO2_HTTP响应 <公开 基础类 = PIV本地类模板 注释 = "提供HTTP响应的响应头字段和响应消息体" 折叠 @文档 = "category = \"辅助类\""
        @别名 = "asio2::http::web_response" @模板实现类 = "ASIO2_HTTP响应">
{

    # 静态调用方法 ===

    方法 创建 <公开 静态 类型 = ASIO2_HTTP响应 注释 = "从URI(统一资源标识符)创建一个典型的HTTP响应结构." 折叠 @嵌入式方法 = "">
    参数 URI <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    {
        @ asio2::http::make_response(PivS2V{@<URI>})
    }

    方法 创建EX <公开 静态 类型 = ASIO2_HTTP响应 注释 = "从指定的参数创建一个典型的HTTP响应结构." 注释 = "注意: 本方法不会自动URL编码." 折叠 @嵌入式方法 = "">
    参数 状态码 <类型 = 整数>
    参数 消息体 <注释 = "推荐类型: 标准文本类U、文本视图类U、字节集类(UTF-8)、文本型;" @匹配类型 = 通用型>
    参数 版本 <类型 = 整数 注释 = "所欲使用的HTTP版本,默认值11表示\"HTTP/1.1\";" 注释 = " 主版本号 = 版本 / 10;" 注释 = " 次版本号 = 版本 % 10;"
            @默认值 = 11>
    {
        @ asio2::http::make_response(static_cast<unsigned>(@<状态码>)
        @     PivS2V{@<消息体>}, static_cast<unsigned>(@<版本>))
    }

    # 静态调用方法 ===

    方法 重置 <公开 静态 注释 = "将本对象的内容重置为空" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @<欲操作本对象>.reset()
    }

    # 常用方法 ---

    方法 请求结果 <公开 静态 属性读 类型 = 字节集类 注释 = "本次请求所返回的响应结果数据." 注释 = "注意: 返回字节集类,会有内存拷贝." 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ return @an<CVolMem>(@<欲操作本对象>.body().text().c_str(), static_cast<INT_P>(@<欲操作本对象>.body().size()));
    }

    方法 响应体 <公开 静态 属性读 类型 = 文本视图类U 注释 = "本次请求所返回的UTF-8编码响应体,其他编码使用本方法会乱码."
            注释 = "注意: 本方法等同于\"请求结果\",但不会产生内存复制." 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ return @<欲操作本对象>.body().text();
    }

    方法 响应头 <公开 静态 属性读 类型 = 标准文本容器类U 注释 = "获取所有的响应头字段" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        变量 结果 <类型 = 标准文本容器类U>
        欲操作本对象.枚举响应头 ()
        {
            结果.加入成员 (带参构造对象 (标准文本类U, 欲操作本对象.取枚举字段名 ()).加入文本 (": ").加入文本 (欲操作本对象.取枚举值 ()))
        }
        返回 (结果)
    }

    方法 取结果文本 <公开 静态 类型 = 文本型 注释 = "取出响应消息体所对应的UTF-16LE编码文本内容" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 文本编码 <类型 = 文本编码类型 注释 = "提供网页编码类型,默认为utf8编码,如果是gbk网页请使用\"文本编码类型.多字节\"." @默认值 = 文本编码类型.UTF8>
    {
        如果 (文本编码 == 文本编码类型.多字节)
        {
            返回 (多字节到文本 (欲操作本对象.请求结果))
        }
        否则 (文本编码 == 文本编码类型.UTF16)
        {
            返回 (字节集到文本 (欲操作本对象.请求结果))
        }
        返回 (欲操作本对象.响应体.到文本型 ())
    }

    方法 取Cookie <公开 静态 类型 = 标准文本类U 注释 = "返回将Set-Cookie头字段合并整理后的结果,可用于请求头的Cookie头字段." 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        变量 结果 <类型 = 标准文本类U>
        变量 值数组 <类型 = 文本视图容器类U>
        变量 值文本 <类型 = 文本视图类U>
        欲操作本对象.枚举指定字段 (ASIO2_头字段.Set_Cookie)
        {
            欲操作本对象.取枚举值 ().分割文本 (_sv (";"), 值数组)
            值数组.枚举循环 ()
            {
                值文本 = 值数组.取枚举值 ()
                如果 (值文本.寻找字符 (61, 0) != -1)  // '='
                {
                    如果 (值文本.是否以文本开头 (_sv ("Domain"), 假) == 假 && 值文本.是否以文本开头 (_sv ("Path"), 假) == 假 && 值文本.是否以文本开头 (_sv ("Expires"), 假) == 假 && 值文本.是否以文本开头 (_sv ("Max-Age"), 假) == 假 && 值文本.是否以文本开头 (_sv ("SameSite"), 假) == 假 && 值文本.是否以文本开头 (_sv ("Priority"), 假) == 假)
                    {
                        如果 (结果.是否为空 () == 假)
                        {
                            结果.加入文本 (_sv ("; "))
                        }
                        结果.加入文本 (值文本)
                    }
                }
            }
        }
        返回 (结果)
    }

    # 响应头字段 ---

    方法 置响应头 <公开 静态 注释 = "通过字段常量设置其响应头字段值,将覆盖同一头字段的所有值." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲设置的\"Asio2_头字段\"常量">
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.set(static_cast<asio2::http::field>(@<字段名>), PivS2V{@<值>})
    }

    方法 置响应头2 <公开 静态 注释 = "通过字段名设置其响应头字段值,将覆盖同一头字段的所有值." 注释 = "注意: 本方法将不区分名称的大小写替换现有的头字段,"
            注释 = "也可以用来置入不合规范的字段名." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <注释 = "提供所欲设置的字段名,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.set(PivS2V{@<字段名>}, PivS2V{@<值>})
    }

    方法 插入响应头 <公开 静态 注释 = "通过字段常量插入对应的响应头字段值,如果已经有相同的头字段,将插入到它的后面." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲插入的\"Asio2_头字段\"常量">
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.insert(static_cast<asio2::http::field>(@<字段名>), PivS2V{@<值>})
    }

    方法 插入响应头2 <公开 静态 注释 = "通过头字段名插入对应的响应头字段值,如果已经有相同的头字段,将插入到它的后面." 注释 = "注意: 本方法支持插入不合规范的头字段名称." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <注释 = "提供所欲插入的字段名,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 值 <注释 = "提供所欲设置的字段值,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.insert(PivS2V{@<字段名>}, PivS2V{@<值>})
    }

    方法 取响应头值 <公开 静态 类型 = 文本视图类U 注释 = "通过字段常量获取对应的响应头字段值,如果查找的头字段不存在则返回空文本."
            注释 = "注意: 本方法只返回指定头字段的第一个值,如需获取所有值,请用\"枚举指定字段\"." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲取值的\"Asio2_头字段\"常量">
    {
        @ @dt<文本视图类U>{@<欲操作本对象>[static_cast<asio2::http::field>(@<字段名>)]}
    }

    方法 取响应头值2 <公开 静态 类型 = 文本视图类U 注释 = "通过头字段名获取对应的响应头字段值,如果查找的头字段不存在则返回空文本."
            注释 = "注意: 本方法只返回指定头字段的第一个值,如需获取所有值,请用\"枚举指定字段\"." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <注释 = "提供所欲取值的字段名,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @dt<文本视图类U>{@<欲操作本对象>[PivS2V{@<字段名>}]}
    }

    方法 删除响应头 <公开 静态 注释 = "通过字段常量删除对应的响应头字段" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲删除的\"Asio2_头字段\"常量">
    {
        @ @<欲操作本对象>.erase(static_cast<asio2::http::field>(@<字段名>))
    }

    方法 删除响应头2 <公开 静态 注释 = "通过字段名删除对应的响应头字段,本方法可以删除不在常量中的头字段." 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <注释 = "提供所欲删除的字段名,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    {
        @ @<欲操作本对象>.erase(PivS2V{@<字段名>})
    }

    方法 清空响应头 <公开 静态 注释 = "删除所有的响应头字段" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @<欲操作本对象>.clear()
    }

    方法 枚举指定字段 <公开 静态 注释 = "启动一个循环来枚举指定头字段的每一个值,在循环中可以调用" 注释 = "\"取枚举...\"方法来获取当前所枚举到的成员值." 折叠
            @嵌入式方法 = "name = field_iter\r\nhas_loop_body = true">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 字段名 <类型 = ASIO2_头字段 注释 = "提供所欲插入的\"Asio2_头字段\"常量">
    {
        @ asio2::http::web_response& @sn<rand_name0> = @<欲操作本对象>;
        @ asio2::http::field @sn<rand_name1> = static_cast<asio2::http::field>(@<字段名>);
        @ size_t @sn<rand_name2> = @sn<rand_name0>.count(@sn<rand_name1>);
        @ for (auto _it = @sn<rand_name0>.find(@sn<rand_name1>); @sn<rand_name2> > 0; _it++, @sn<rand_name2>--)
    }

    方法 枚举响应头 <公开 静态 注释 = "启动一个循环来枚举响应头字段列表中的每一个成员,在循环中可以调用" 注释 = "\"取枚举...\"方法来获取当前所枚举到的成员值." 折叠
            @嵌入式方法 = "name = response_iter\r\nhas_loop_body = true">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ asio2::http::web_response& @sn<rand_name0> = @<欲操作本对象>;
        @ for (auto _it = @sn<rand_name0>.begin(); _it != @sn<rand_name0>.end (); _it++)
    }

    方法 取枚举字段名 <公开 静态 类型 = 文本视图类U 注释 = "只能在本类的\"枚举响应头/枚举指定字段\"的子语句体中使用,用作取回当前所枚举到的字段名." 折叠
            @嵌入式方法 = "parent = \"response_iter, field_iter\"">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @dt<文本视图类U>{_it->name_string()}
    }

    方法 取枚举编号 <公开 静态 类型 = ASIO2_头字段 注释 = "只能在本类的\"枚举响应头/枚举指定字段\"的子语句体中使用,用作取回当前所枚举到的字段常量编号."
            注释 = "如果头字段名不在常量列表内,则返回未知(0)." 折叠 @嵌入式方法 = "parent = \"response_iter, field_iter\"">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ static_cast<INT>(_it->name())
    }

    方法 取枚举值 <公开 静态 类型 = 文本视图类U 注释 = "只能在本类的\"枚举响应头/枚举指定字段\"的子语句体中使用,用作取回当前所枚举到的字段值." 折叠
            @嵌入式方法 = "parent = \"response_iter, field_iter\"">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @dt<文本视图类U>{_it->value()}
    }

    # 属性写 ---

    方法 HTTP版本 <公开 静态 属性写 注释 = "设置HTTP版本" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 版本 <类型 = 整数 注释 = "所欲使用的HTTP版本,默认值11表示\"HTTP/1.1\";" 注释 = " 主版本号 = 版本 / 10;" 注释 = " 次版本号 = 版本 % 10;">
    {
        @ @<欲操作本对象>.version(static_cast<unsigned>(@<版本>));
    }

    方法 响应码 <公开 静态 属性写 注释 = "设置HTTP的响应状态码" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 新状态码 <类型 = 整数 注释 = "请参考\"Asio2_状态码\"中的常量">
    {
        @ @<欲操作本对象>.result(static_cast<unsigned>(@<新状态码>));
    }

    方法 状态信息 <公开 静态 属性写 注释 = "设置HTTP响应的简短理由" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 理由 <类型 = 文本视图类U 注释 = "提供新的HTTP动词文本">
    {
        @ @<欲操作本对象>.reason(@<理由>)
    }

    方法 分块传输 <公开 静态 属性写 注释 = "设置是否启用分块传输(Transfer-Encoding:chunked)" 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 是否启用 <类型 = 逻辑型>
    {
        @ @<欲操作本对象>.chunked(static_cast<bool>(@<是否启用>));
    }

    方法 内容长度 <公开 静态 属性写 注释 = "设置请求内容的长度." 注释 = "注意: 设置内容长度后,将自动禁用分块传输." 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 新长度 <类型 = 长整数>
    {
        @ @<欲操作本对象>.content_length(static_cast<uint64_t>(@<新长度>));
    }

    方法 持久连接 <公开 静态 属性写 注释 = "设置keep-alive消息语义选项." 注释 = "本方法可调整\"连接/Connection\"字段,以指示在相应响应后是否应保持打开连接." 折叠>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 是否保持 <类型 = 逻辑型>
    {
        @ @<欲操作本对象>.keep_alive(static_cast<bool>(@<是否保持>));
    }

    # 属性读 ---

    方法 HTTP版本 <公开 静态 属性读 类型 = 整数 注释 = "返回HTTP版本,返回值包含主版本号和次版本号,计算公式如下:" 注释 = " 主版本号 = 版本 / 10;"
            注释 = " 次版本号 = 版本 % 10;" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ static_cast<INT>(@<欲操作本对象>.version())
    }

    方法 响应码 <公开 静态 属性读 类型 = 整数 注释 = "返回HTTP的响应状态码" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ static_cast<INT>(@<欲操作本对象>.result_int())
    }

    方法 状态信息 <公开 静态 属性读 类型 = 文本视图类U 注释 = "返回HTTP响应的简短理由" 折叠 @禁止流程检查 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ return data().reason();
    }

    方法 拥有Multipart <公开 静态 属性读 类型 = 逻辑型 注释 = "HTTP请求的内容类型为\"multipart/form-data\"多部分对象集合时返回真" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @<欲操作本对象>.has_multipart()
    }

    方法 分块传输 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回是否启用分块传输(Transfer-Encoding:chunked)" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @<欲操作本对象>.chunked()
    }

    方法 有效载荷大小 <公开 静态 属性读 类型 = 长整数 注释 = "返回有效载荷大小,本方法将测量并返回消息体的长度;"
            注释 = "如果没有消息体将返回0,如果存在消息体但启用了分块传输,则返回-1." 注释 = "注: 本方法不会检查\"内容长度/Content-Length\"字段的值." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ static_cast<INT64>(@<欲操作本对象>.payload_size().value_or(-1))
    }

    方法 拥有内容长度 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回真表示存在Content-Length字段;" 注释 = "本方法仅判断是否存在该字段,不会检查消息体的属性值." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @<欲操作本对象>.has_content_length()
    }

    方法 持久连接 <公开 静态 属性读 类型 = 逻辑型 注释 = "返回真表示在消息语义中标识了keep-alive" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @<欲操作本对象>.keep_alive()
    }

    方法 是否需要EOF <公开 静态 属性读 类型 = 逻辑型 注释 = "返回真表示消息语义需要一个文件结束符(EOF)." 注释 = "对于HTTP请求,此值返回是否持久连接的逻辑取反结果." 折叠
            @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    {
        @ @<欲操作本对象>.need_eof()
    }

    # ---

    方法 填充文本 <公开 静态 类型 = ASIO2_HTTP响应 注释 = "Respond to http request with plain text content" 折叠 @嵌入式方法 = ""
            @视窗.返回参考 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 内容 <注释 = "提供所欲填充的文本,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 状态码 <类型 = 整数 @默认值 = ASIO2_状态码.OK>
    参数 媒体类型 <类型 = 文本型 注释 = "MIME类型" @默认值 = "text/plain" @需求类型 = 立即数或常量>
    参数 版本 <类型 = 整数 注释 = "HTTP版本号,主版本号 = 版本 / 10; 次版本号 = 版本 % 10;" @默认值 = 11>
    {
        @ @<欲操作本对象>.fill_text(PivS2V{@<内容>}, static_cast<asio2::http::status>(@<状态码>), u8@sn<quot>@pvpt<媒体类型>@sn<quot>, static_cast<unsigned>(@<版本>))
    }

    方法 填充JSON <公开 静态 类型 = ASIO2_HTTP响应 注释 = "Respond to http request with json content" 折叠 @嵌入式方法 = ""
            @视窗.返回参考 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 内容 <注释 = "提供所欲填充的JSON文本,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 状态码 <类型 = 整数 @默认值 = ASIO2_状态码.OK>
    参数 媒体类型 <类型 = 文本型 注释 = "MIME类型" @默认值 = "application/json" @需求类型 = 立即数或常量>
    参数 版本 <类型 = 整数 注释 = "HTTP版本号,主版本号 = 版本 / 10; 次版本号 = 版本 % 10;" @默认值 = 11>
    {
        @ @<欲操作本对象>.fill_json(PivS2V{@<内容>}, static_cast<asio2::http::status>(@<状态码>), u8@sn<quot>@pvpt<媒体类型>@sn<quot>, static_cast<unsigned>(@<版本>))
    }

    方法 填充HTML <公开 静态 类型 = ASIO2_HTTP响应 注释 = "Respond to http request with html content"
            注释 = "the response body, may be a plain text string, or a stardand"
            注释 = "   * <html>...</html> string, it\'s just that the content-type is \"text/html\" by default." 折叠
            @嵌入式方法 = "" @视窗.返回参考 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 内容 <注释 = "提供所欲填充的HTML内容,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 状态码 <类型 = 整数 @默认值 = ASIO2_状态码.OK>
    参数 媒体类型 <类型 = 文本型 注释 = "MIME类型" @默认值 = "text/html" @需求类型 = 立即数或常量>
    参数 版本 <类型 = 整数 注释 = "HTTP版本号,主版本号 = 版本 / 10; 次版本号 = 版本 % 10;" @默认值 = 11>
    {
        @ @<欲操作本对象>.fill_html(PivS2V{@<内容>}, static_cast<asio2::http::status>(@<状态码>), u8@sn<quot>@pvpt<媒体类型>@sn<quot>, static_cast<unsigned>(@<版本>))
    }

    方法 填充页面 <公开 静态 类型 = ASIO2_HTTP响应 注释 = "Respond to http request with pre-prepared error page content"
            注释 = "   * Generated a standard html error page automatically use the status coe \'result\',"
            注释 = "   * like <html>...</html>, and the content-type is \"text/html\" by default." 折叠 @嵌入式方法 = ""
            @视窗.返回参考 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 状态码 <类型 = 整数>
    参数 描述 <注释 = "提供所欲填充的HTML内容,推荐类型:" 注释 = " 文本视图类U、标准文本类U、文本型、字节集类(UTF-8)" @匹配类型 = 通用型>
    参数 媒体类型 <类型 = 文本型 注释 = "MIME类型" @默认值 = "text/html" @需求类型 = 立即数或常量>
    参数 版本 <类型 = 整数 注释 = "HTTP版本号,主版本号 = 版本 / 10; 次版本号 = 版本 % 10;" @默认值 = 11>
    {
        @ @<欲操作本对象>.fill_page(static_cast<asio2::http::status>(@<状态码>), PivS2V{@<描述>}, u8@sn<quot>@pvpt<媒体类型>@sn<quot>, static_cast<unsigned>(@<版本>))
    }

    方法 填充文件 <公开 静态 类型 = ASIO2_HTTP响应 注释 = "Respond to http request with local file" 折叠 @嵌入式方法 = ""
            @视窗.返回参考 = 真>
    参数 欲操作本对象 <类型 = ASIO2_HTTP响应>
    参数 文件路径 <类型 = 文本型>
    参数 状态码 <类型 = 整数 @默认值 = ASIO2_状态码.OK>
    参数 版本 <类型 = 整数 注释 = "HTTP版本号,主版本号 = 版本 / 10; 次版本号 = 版本 % 10;" @默认值 = 11>
    {
        @ @<欲操作本对象>.fill_file(std::filesystem::path{@<文件路径>.GetText()}, static_cast<asio2::http::status>(@<状态码>), static_cast<unsigned>(@<版本>))
    }
}

类 ASIO2_Multipart对象 <公开 基础类 = PIV本地类模板 折叠 @文档 = "category = \"辅助类\"" @别名 = "asio2::http::multipart"
        @模板实现类 = "ASIO2_Multipart对象">
{
    方法 到文本 <公开 静态 类型 = 标准文本类U 注释 = "将Multipart字段转换到文本" 折叠 @嵌入式方法 = "">
    参数 欲操作本对象 <类型 = ASIO2_Multipart对象>
    {
        @ @dt<标准文本类U>{asio2::http::to_string(@<欲操作本对象>)}
    }

    #
}

# 常量 ===

类 ASIO2_请求方法 <公开 注释 = "HTTP请求方法动词" 注释 = "每个动词对应HTTP请求消息中使用的特定方法字符串." 折叠 @文档 = "category = \"常量\""
        @常量类 = 整数>
{
    常量 未知 <公开 值 = @"@static_cast<INT>(asio2::http::verb::unknown)" 注释 = "一个未知方法;"
            注释 = "此值表示请求方法字符串不是一个可识别的HTTP动词.">
    常量 DELETE <值 = @"@static_cast<INT>(asio2::http::verb::delete_)" 注释 = "DELETE方法可用于删除指定的资源">
    常量 GET <公开 值 = @"@static_cast<INT>(asio2::http::verb::get)" 注释 = "GET方法请求服务器返回指定的资源;"
            注释 = "GET请求只获取数据,不会产生其他效果.">
    常量 HEAD <公开 值 = @"@static_cast<INT>(asio2::http::verb::head)" 注释 = "HEAD方法与GET类似,但只获取响应头信息,不会获取有效载荷主体;"
            注释 = "这通常用于仅获取响应头中的元信息,而不想传输实体内容.">
    常量 POST <公开 值 = @"@static_cast<INT>(asio2::http::verb::post)" 注释 = "POST方法请求向服务器提交资源;"
            注释 = "POST涵盖以下功能: 注释已有的资源; 在公告板、新闻组、邮件列表或类似的文章组中发布消息;"
            注释 = "通过注册新增用户; 向数据处理程序提供一批数据,例如提交一个表单; 通过追加操作,扩展数据库数据.">
    常量 PUT <公开 值 = @"@static_cast<INT>(asio2::http::verb::put)" 注释 = "PUT方法请求更新资源,创建或替换目标资源."
            注释 = "如果URI指向一个现有的资源,它将被覆盖替换;" 注释 = "如果URI指向了不存在的资源,将在服务器上创建对应的资源.">
    常量 CONNECT <公开 值 = @"@static_cast<INT>(asio2::http::verb::connect)"
            注释 = "CONNECT方法用于创建隧道,开启客户端与所请求资源之间的双向沟通的通道."
            注释 = "例如,CONNECT可以用来访问采用了SSL(HTTPS)协议的站点,客户端要求代理服务器将TCP连接作为通往目的主机隧道;"
            注释 = "之后该服务器会代替客户端与目的主机建立连接.连接建立好之后,代理服务器会面向客户端发送或接收TCP消息流.">
    常量 OPTIONS <公开 值 = @"@static_cast<INT>(asio2::http::verb::options)"
            注释 = "OPTIONS方法请求服务器告知其在指定的URL上支持的请求方式;" 注释 = "这可用于通过请求\"*\"而不是特定资源来检查web服务器的功能.">
    常量 TRACE <公开 值 = @"@static_cast<INT>(asio2::http::verb::trace)"
            注释 = "TRACE方法允许客户端查看最终发送到服务器的请求消息(因为请求在中间节点可能会被修改).">
    常量 COPY <公开 值 = @"@static_cast<INT>(asio2::http::verb::copy)" 注释 = "<WebDAV>">
    常量 LOCK <公开 值 = @"@static_cast<INT>(asio2::http::verb::lock)" 注释 = "<WebDAV>">
    常量 MKCOL <公开 值 = @"@static_cast<INT>(asio2::http::verb::mkcol)" 注释 = "<WebDAV>">
    常量 MOVE <公开 值 = @"@static_cast<INT>(asio2::http::verb::move)" 注释 = "<WebDAV>">
    常量 PROPFIND <公开 值 = @"@static_cast<INT>(asio2::http::verb::propfind)" 注释 = "<WebDAV>">
    常量 PROPPATCH <公开 值 = @"@static_cast<INT>(asio2::http::verb::proppatch)" 注释 = "<WebDAV>">
    常量 SEARCH <公开 值 = @"@static_cast<INT>(asio2::http::verb::search)" 注释 = "<WebDAV>">
    常量 UNLOCK <公开 值 = @"@static_cast<INT>(asio2::http::verb::unlock)" 注释 = "<WebDAV>">
    常量 BIND <公开 值 = @"@static_cast<INT>(asio2::http::verb::bind)" 注释 = "<WebDAV>">
    常量 REBIND <公开 值 = @"@static_cast<INT>(asio2::http::verb::rebind)" 注释 = "<WebDAV>">
    常量 UNBIND <公开 值 = @"@static_cast<INT>(asio2::http::verb::unbind)" 注释 = "<WebDAV>">
    常量 ACL <公开 值 = @"@static_cast<INT>(asio2::http::verb::acl)" 注释 = "<WebDAV>">
    常量 REPORT <公开 值 = @"@static_cast<INT>(asio2::http::verb::report)" 注释 = "subversion">
    常量 MKACTIVITY <公开 值 = @"@static_cast<INT>(asio2::http::verb::mkactivity)" 注释 = "subversion">
    常量 CHECKOUT <公开 值 = @"@static_cast<INT>(asio2::http::verb::checkout)" 注释 = "subversion">
    常量 MERGE <公开 值 = @"@static_cast<INT>(asio2::http::verb::merge)" 注释 = "subversion">
    常量 M_SEARCH <公开 值 = @"@static_cast<INT>(asio2::http::verb::msearch)" 注释 = "<upnp>M-SEARCH">
    常量 NOTIFY <公开 值 = @"@static_cast<INT>(asio2::http::verb::notify)" 注释 = "<upnp>">
    常量 SUBSCRIBE <公开 值 = @"@static_cast<INT>(asio2::http::verb::subscribe)" 注释 = "<upnp>">
    常量 UNSUBSCRIBE <公开 值 = @"@static_cast<INT>(asio2::http::verb::unsubscribe)" 注释 = "<upnp>">
    常量 PATCH <公开 值 = @"@static_cast<INT>(asio2::http::verb::patch)" 注释 = "<RFC-5789>PATCH方法用于对资源进行部分修改;"
            注释 = "与PUT不同,PUT方法是对资源进行整体覆盖.">
    常量 PURGE <公开 值 = @"@static_cast<INT>(asio2::http::verb::purge)" 注释 = "<RFC-5789>">
    常量 MKCALENDAR <公开 值 = @"@static_cast<INT>(asio2::http::verb::mkcalendar)" 注释 = "CalDAV">
    常量 LINK <公开 值 = @"@static_cast<INT>(asio2::http::verb::link)" 注释 = "<RFC-2068, section 19.6.1.2>">
    常量 UNLINK <公开 值 = @"@static_cast<INT>(asio2::http::verb::unlink)" 注释 = "<RFC-2068, section 19.6.1.2>">
}

类 ASIO2_状态码 <公开 注释 = "HTTP状态码" 折叠 @文档 = "category = \"常量\"">
{
    常量 未知 <公开 类型 = 整数 值 = 0>
    常量 Continue <公开 类型 = 整数 值 = 100 注释 = "Continue">
    常量 Switching_Protocols <公开 类型 = 整数 值 = 101 注释 = "Switching Protocols">
    常量 Processing <公开 类型 = 整数 值 = 102 注释 = "Processing">
    常量 ""
    常量 OK <公开 类型 = 整数 值 = 200>
    常量 Created <公开 类型 = 整数 值 = 201>
    常量 Accepted <公开 类型 = 整数 值 = 202>
    常量 Non_Authoritative_Information <公开 类型 = 整数 值 = 203 注释 = "Non-Authoritative Information">
    常量 No_Content <公开 类型 = 整数 值 = 204 注释 = "No Content">
    常量 Reset_Content <公开 类型 = 整数 值 = 205 注释 = "Reset Content">
    常量 Partial_Content <公开 类型 = 整数 值 = 206 注释 = "Partial Content">
    常量 Multi_Status <公开 类型 = 整数 值 = 207 注释 = "Multi-Status">
    常量 Already_Reported <公开 类型 = 整数 值 = 208 注释 = "Already Reported">
    常量 IM_Used <公开 类型 = 整数 值 = 226 注释 = "IM Used">
    常量 ""
    常量 "" <公开 类型 = 整数 值 = 300 注释 = "Multiple Choices">
    常量 "" <公开 类型 = 整数 值 = 301 注释 = "Moved Permanently">
    常量 "" <公开 类型 = 整数 值 = 302 注释 = "Found">
    常量 "" <公开 类型 = 整数 值 = 303 注释 = "See Other">
    常量 "" <公开 类型 = 整数 值 = 304 注释 = "Not Modified">
    常量 "" <公开 类型 = 整数 值 = 305 注释 = "Use Proxy">
    常量 "" <公开 类型 = 整数 值 = 307 注释 = "Temporary Redirect">
    常量 "" <公开 类型 = 整数 值 = 308 注释 = "Permanent Redirect">
    常量 ""
    常量 "" <公开 类型 = 整数 值 = 400 注释 = "Bad Request">
    常量 "" <公开 类型 = 整数 值 = 401 注释 = "Unauthorized">
    常量 "" <公开 类型 = 整数 值 = 402 注释 = "Payment Required">
    常量 "" <公开 类型 = 整数 值 = 403 注释 = "Forbidden">
    常量 "" <公开 类型 = 整数 值 = 404 注释 = "Not Found">
    常量 "" <公开 类型 = 整数 值 = 405 注释 = "Method Not Allowed">
    常量 "" <公开 类型 = 整数 值 = 406 注释 = "Not Acceptable">
    常量 "" <公开 类型 = 整数 值 = 407 注释 = "Proxy Authentication Required">
    常量 "" <公开 类型 = 整数 值 = 408 注释 = "Request Timeout">
    常量 "" <公开 类型 = 整数 值 = 409 注释 = "Conflict">
    常量 "" <公开 类型 = 整数 值 = 410 注释 = "Gone">
    常量 "" <公开 类型 = 整数 值 = 411 注释 = "Length Required">
    常量 "" <公开 类型 = 整数 值 = 412 注释 = "Precondition Failed">
    常量 "" <公开 类型 = 整数 值 = 413 注释 = "Payload Too Large">
    常量 "" <公开 类型 = 整数 值 = 414 注释 = "URI Too Long">
    常量 "" <公开 类型 = 整数 值 = 415 注释 = "Unsupported Media Type">
    常量 "" <公开 类型 = 整数 值 = 416 注释 = "Range Not Satisfiable">
    常量 "" <公开 类型 = 整数 值 = 417 注释 = "Expectation Failed">
    常量 "" <公开 类型 = 整数 值 = 421 注释 = "Misdirected Request">
    常量 "" <公开 类型 = 整数 值 = 422 注释 = "Unprocessable Entity">
    常量 "" <公开 类型 = 整数 值 = 423 注释 = "Locked">
    常量 "" <公开 类型 = 整数 值 = 424 注释 = "Failed Dependency">
    常量 "" <公开 类型 = 整数 值 = 426 注释 = "Upgrade Required">
    常量 "" <公开 类型 = 整数 值 = 428 注释 = "Precondition Required">
    常量 "" <公开 类型 = 整数 值 = 429 注释 = "Too Many Requests">
    常量 "" <公开 类型 = 整数 值 = 431 注释 = "Request Header Fields Too Large">
    常量 "" <公开 类型 = 整数 值 = 444 注释 = "Connection Closed Without Response">
    常量 "" <公开 类型 = 整数 值 = 451 注释 = "Unavailable For Legal Reasons">
    常量 "" <公开 类型 = 整数 值 = 499 注释 = "Client Closed Request">
    常量 ""
    常量 "" <公开 类型 = 整数 值 = 500 注释 = "Internal Server Error">
    常量 "" <公开 类型 = 整数 值 = 501 注释 = "Not Implemented">
    常量 "" <公开 类型 = 整数 值 = 502 注释 = "Bad Gateway">
    常量 "" <公开 类型 = 整数 值 = 503 注释 = "Service Unavailable">
    常量 "" <公开 类型 = 整数 值 = 504 注释 = "Gateway Timeout">
    常量 "" <公开 类型 = 整数 值 = 505 注释 = "HTTP Version Not Supported">
    常量 "" <公开 类型 = 整数 值 = 506 注释 = "Variant Also Negotiates">
    常量 "" <公开 类型 = 整数 值 = 507 注释 = "Insufficient Storage">
    常量 "" <公开 类型 = 整数 值 = 508 注释 = "Loop Detected">
    常量 "" <公开 类型 = 整数 值 = 510 注释 = "Not Extended">
    常量 "" <公开 类型 = 整数 值 = 511 注释 = "Network Authentication Required">
    常量 "" <公开 类型 = 整数 值 = 599 注释 = "Network Connect Timeout Error">
}

类 ASIO2_状态分类 <公开 注释 = "HTTP状态分类" 折叠 @文档 = "category = \"常量\"" @常量类 = 整数>
{
    常量 未知 <公开 值 = @"@static_cast<INT>(asio2::http::status_class::unknown)" 注释 = "Unknown status-class">
    常量 信息 <公开 值 = @"@static_cast<INT>(asio2::http::status_class::informational)"
            注释 = "The request was received, continuing processing.">
    常量 成功 <公开 值 = @"@static_cast<INT>(asio2::http::status_class::successful)"
            注释 = "The request was successfully received, understood, and accepted.">
    常量 重定向 <公开 值 = @"@static_cast<INT>(asio2::http::status_class::redirection)"
            注释 = "Further action needs to be taken in order to complete the request.">
    常量 客户端错误 <公开 值 = @"@static_cast<INT>(asio2::http::status_class::client_error)"
            注释 = "The request contains bad syntax or cannot be fulfilled.">
    常量 服务器错误 <公开 值 = @"@static_cast<INT>(asio2::http::status_class::server_error)"
            注释 = "The server failed to fulfill an apparently valid request.">
}

类 ASIO2_头字段 <公开 注释 = "提供常用的头字段名称常量" 注释 = "可用于HTTP请求头、HTTP响应头、以及其他协议" 折叠 @文档 = "category = \"常量\""
        @常量类 = 整数>
{
    常量 未知 <公开 值 = @"@static_cast<INT>(asio2::http::field::unknown)" 注释 = "<unknown-field>"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 A_IM <公开 值 = @"@static_cast<INT>(asio2::http::field::a_im)" 注释 = "A-IM" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept <公开 值 = @"@static_cast<INT>(asio2::http::field::accept)" 注释 = "Accept"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Additions <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_additions)"
            注释 = "Accept-Additions" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Charset <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_charset)"
            注释 = "Accept-Charset" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Datetime <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_datetime)"
            注释 = "Accept-Datetime" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Encoding <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_encoding)"
            注释 = "Accept-Encoding" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Features <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_features)"
            注释 = "Accept-Features" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Language <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_language)"
            注释 = "Accept-Language" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Patch <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_patch)" 注释 = "Accept-Patch"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Post <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_post)" 注释 = "Accept-Post"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Accept_Ranges <公开 值 = @"@static_cast<INT>(asio2::http::field::accept_ranges)" 注释 = "Accept-Ranges"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control <公开 值 = @"@static_cast<INT>(asio2::http::field::access_control)"
            注释 = "Access-Control" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Allow_Credentials <公开
            值 = @"@static_cast<INT>(asio2::http::field::access_control_allow_credentials)"
            注释 = "Access-Control-Allow-Credentials" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Allow_Headers <公开
            值 = @"@static_cast<INT>(asio2::http::field::access_control_allow_headers)"
            注释 = "Access-Control-Allow-Headers" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Allow_Methods <公开
            值 = @"@static_cast<INT>(asio2::http::field::access_control_allow_methods)"
            注释 = "Access-Control-Allow-Methods" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Allow_Origin <公开
            值 = @"@static_cast<INT>(asio2::http::field::access_control_allow_origin)"
            注释 = "Access-Control-Allow-Origin" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Expose_Headers <公开
            值 = @"@static_cast<INT>(asio2::http::field::access_control_expose_headers)"
            注释 = "Access-Control-Expose-Headers" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Max_Age <公开 值 = @"@static_cast<INT>(asio2::http::field::access_control_max_age)"
            注释 = "Access-Control-Max-Age" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Request_Headers <公开
            值 = @"@static_cast<INT>(asio2::http::field::access_control_request_headers)"
            注释 = "Access-Control-Request-Headers" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Access_Control_Request_Method <公开
            值 = @"@static_cast<INT>(asio2::http::field::access_control_request_method)"
            注释 = "Access-Control-Request-Method" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Age <公开 值 = @"@static_cast<INT>(asio2::http::field::age)" 注释 = "Age" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Allow <公开 值 = @"@static_cast<INT>(asio2::http::field::allow)" 注释 = "Allow" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 ALPN <公开 值 = @"@static_cast<INT>(asio2::http::field::alpn)" 注释 = "ALPN" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Also_Control <公开 值 = @"@static_cast<INT>(asio2::http::field::also_control)" 注释 = "Also-Control"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Alt_Svc <公开 值 = @"@static_cast<INT>(asio2::http::field::alt_svc)" 注释 = "Alt-Svc"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Alt_Used <公开 值 = @"@static_cast<INT>(asio2::http::field::alt_used)" 注释 = "Alt-Used"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Alternate_Recipient <公开 值 = @"@static_cast<INT>(asio2::http::field::alternate_recipient)"
            注释 = "Alternate-Recipient" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Alternates <公开 值 = @"@static_cast<INT>(asio2::http::field::alternates)" 注释 = "Alternates"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Apparently_To <公开 值 = @"@static_cast<INT>(asio2::http::field::apparently_to)" 注释 = "Apparently-To"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Apply_To_Redirect_Ref <公开 值 = @"@static_cast<INT>(asio2::http::field::apply_to_redirect_ref)"
            注释 = "Apply-To-Redirect-Ref" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Approved <公开 值 = @"@static_cast<INT>(asio2::http::field::approved)" 注释 = "Approved"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Archive <公开 值 = @"@static_cast<INT>(asio2::http::field::archive)" 注释 = "Archive"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Archived_At <公开 值 = @"@static_cast<INT>(asio2::http::field::archived_at)" 注释 = "Archived-At"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Article_Names <公开 值 = @"@static_cast<INT>(asio2::http::field::article_names)" 注释 = "Article-Names"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Article_Updates <公开 值 = @"@static_cast<INT>(asio2::http::field::article_updates)"
            注释 = "Article-Updates" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Authentication_Control <公开 值 = @"@static_cast<INT>(asio2::http::field::authentication_control)"
            注释 = "Authentication-Control" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Authentication_Info <公开 值 = @"@static_cast<INT>(asio2::http::field::authentication_info)"
            注释 = "Authentication-Info" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Authentication_Results <公开 值 = @"@static_cast<INT>(asio2::http::field::authentication_results)"
            注释 = "Authentication-Results" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Authorization <公开 值 = @"@static_cast<INT>(asio2::http::field::authorization)" 注释 = "Authorization"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Auto_Submitted <公开 值 = @"@static_cast<INT>(asio2::http::field::auto_submitted)"
            注释 = "Auto-Submitted" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Autoforwarded <公开 值 = @"@static_cast<INT>(asio2::http::field::autoforwarded)" 注释 = "Autoforwarded"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Autosubmitted <公开 值 = @"@static_cast<INT>(asio2::http::field::autosubmitted)" 注释 = "Autosubmitted"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Base <公开 值 = @"@static_cast<INT>(asio2::http::field::base)" 注释 = "Base" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Bcc <公开 值 = @"@static_cast<INT>(asio2::http::field::bcc)" 注释 = "Bcc" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Body <公开 值 = @"@static_cast<INT>(asio2::http::field::body)" 注释 = "Body" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 C_Ext <公开 值 = @"@static_cast<INT>(asio2::http::field::c_ext)" 注释 = "C-Ext" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 C_Man <公开 值 = @"@static_cast<INT>(asio2::http::field::c_man)" 注释 = "C-Man" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 C_Opt <公开 值 = @"@static_cast<INT>(asio2::http::field::c_opt)" 注释 = "C-Opt" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 C_PEP <公开 值 = @"@static_cast<INT>(asio2::http::field::c_pep)" 注释 = "C-PEP" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 C_PEP_Info <公开 值 = @"@static_cast<INT>(asio2::http::field::c_pep_info)" 注释 = "C-PEP-Info"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Cache_Control <公开 值 = @"@static_cast<INT>(asio2::http::field::cache_control)" 注释 = "Cache-Control"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 CalDAV_Timezones <公开 值 = @"@static_cast<INT>(asio2::http::field::caldav_timezones)"
            注释 = "CalDAV-Timezones" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Cancel_Key <公开 值 = @"@static_cast<INT>(asio2::http::field::cancel_key)" 注释 = "Cancel-Key"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Cancel_Lock <公开 值 = @"@static_cast<INT>(asio2::http::field::cancel_lock)" 注释 = "Cancel-Lock"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Cc <公开 值 = @"@static_cast<INT>(asio2::http::field::cc)" 注释 = "Cc" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Close <公开 值 = @"@static_cast<INT>(asio2::http::field::close)" 注释 = "Close" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Comments <公开 值 = @"@static_cast<INT>(asio2::http::field::comments)" 注释 = "Comments"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Compliance <公开 值 = @"@static_cast<INT>(asio2::http::field::compliance)" 注释 = "Compliance"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Connection <公开 值 = @"@static_cast<INT>(asio2::http::field::connection)" 注释 = "Connection"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Alternative <公开 值 = @"@static_cast<INT>(asio2::http::field::content_alternative)"
            注释 = "Content-Alternative" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Base <公开 值 = @"@static_cast<INT>(asio2::http::field::content_base)" 注释 = "Content-Base"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Description <公开 值 = @"@static_cast<INT>(asio2::http::field::content_description)"
            注释 = "Content-Description" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Disposition <公开 值 = @"@static_cast<INT>(asio2::http::field::content_disposition)"
            注释 = "Content-Disposition" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Duration <公开 值 = @"@static_cast<INT>(asio2::http::field::content_duration)"
            注释 = "Content-Duration" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Encoding <公开 值 = @"@static_cast<INT>(asio2::http::field::content_encoding)"
            注释 = "Content-Encoding" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_features <公开 值 = @"@static_cast<INT>(asio2::http::field::content_features)"
            注释 = "Content-features" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::content_id)" 注释 = "Content-ID"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Identifier <公开 值 = @"@static_cast<INT>(asio2::http::field::content_identifier)"
            注释 = "Content-Identifier" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Language <公开 值 = @"@static_cast<INT>(asio2::http::field::content_language)"
            注释 = "Content-Language" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Length <公开 值 = @"@static_cast<INT>(asio2::http::field::content_length)"
            注释 = "Content-Length" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Location <公开 值 = @"@static_cast<INT>(asio2::http::field::content_location)"
            注释 = "Content-Location" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_MD5 <公开 值 = @"@static_cast<INT>(asio2::http::field::content_md5)" 注释 = "Content-MD5"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Range <公开 值 = @"@static_cast<INT>(asio2::http::field::content_range)" 注释 = "Content-Range"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Return <公开 值 = @"@static_cast<INT>(asio2::http::field::content_return)"
            注释 = "Content-Return" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Script_Type <公开 值 = @"@static_cast<INT>(asio2::http::field::content_script_type)"
            注释 = "Content-Script-Type" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Style_Type <公开 值 = @"@static_cast<INT>(asio2::http::field::content_style_type)"
            注释 = "Content-Style-Type" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Transfer_Encoding <公开
            值 = @"@static_cast<INT>(asio2::http::field::content_transfer_encoding)"
            注释 = "Content-Transfer-Encoding" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Type <公开 值 = @"@static_cast<INT>(asio2::http::field::content_type)" 注释 = "Content-Type"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Content_Version <公开 值 = @"@static_cast<INT>(asio2::http::field::content_version)"
            注释 = "Content-Version" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Control <公开 值 = @"@static_cast<INT>(asio2::http::field::control)" 注释 = "Control"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Conversion <公开 值 = @"@static_cast<INT>(asio2::http::field::conversion)" 注释 = "Conversion"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Conversion_With_Loss <公开 值 = @"@static_cast<INT>(asio2::http::field::conversion_with_loss)"
            注释 = "Conversion-With-Loss" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Cookie <公开 值 = @"@static_cast<INT>(asio2::http::field::cookie)" 注释 = "Cookie"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Cookie2 <公开 值 = @"@static_cast<INT>(asio2::http::field::cookie2)" 注释 = "Cookie2"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Cost <公开 值 = @"@static_cast<INT>(asio2::http::field::cost)" 注释 = "Cost" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 DASL <公开 值 = @"@static_cast<INT>(asio2::http::field::dasl)" 注释 = "DASL" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Date <公开 值 = @"@static_cast<INT>(asio2::http::field::date)" 注释 = "Date" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Date_Received <公开 值 = @"@static_cast<INT>(asio2::http::field::date_received)" 注释 = "Date-Received"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 DAV <公开 值 = @"@static_cast<INT>(asio2::http::field::dav)" 注释 = "DAV" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Default_Style <公开 值 = @"@static_cast<INT>(asio2::http::field::default_style)" 注释 = "Default-Style"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Deferred_Delivery <公开 值 = @"@static_cast<INT>(asio2::http::field::deferred_delivery)"
            注释 = "Deferred-Delivery" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Delivery_Date <公开 值 = @"@static_cast<INT>(asio2::http::field::delivery_date)" 注释 = "Delivery-Date"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Delta_Base <公开 值 = @"@static_cast<INT>(asio2::http::field::delta_base)" 注释 = "Delta-Base"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Depth <公开 值 = @"@static_cast<INT>(asio2::http::field::depth)" 注释 = "Depth" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Derived_From <公开 值 = @"@static_cast<INT>(asio2::http::field::derived_from)" 注释 = "Derived-From"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Destination <公开 值 = @"@static_cast<INT>(asio2::http::field::destination)" 注释 = "Destination"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Differential_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::differential_id)"
            注释 = "Differential-ID" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Digest <公开 值 = @"@static_cast<INT>(asio2::http::field::digest)" 注释 = "Digest"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Discarded_X400_IPMS_Extensions <公开
            值 = @"@static_cast<INT>(asio2::http::field::discarded_x400_ipms_extensions)"
            注释 = "Discarded-X400-IPMS-Extensions" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Discarded_X400_MTS_Extensions <公开
            值 = @"@static_cast<INT>(asio2::http::field::discarded_x400_mts_extensions)"
            注释 = "Discarded-X400-MTS-Extensions" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Disclose_Recipients <公开 值 = @"@static_cast<INT>(asio2::http::field::disclose_recipients)"
            注释 = "Disclose-Recipients" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Disposition_Notification_Options <公开
            值 = @"@static_cast<INT>(asio2::http::field::disposition_notification_options)"
            注释 = "Disposition-Notification-Options" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Disposition_Notification_To <公开
            值 = @"@static_cast<INT>(asio2::http::field::disposition_notification_to)"
            注释 = "Disposition-Notification-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Distribution <公开 值 = @"@static_cast<INT>(asio2::http::field::distribution)" 注释 = "Distribution"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 DKIM_Signature <公开 值 = @"@static_cast<INT>(asio2::http::field::dkim_signature)"
            注释 = "DKIM-Signature" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 DL_Expansion_History <公开 值 = @"@static_cast<INT>(asio2::http::field::dl_expansion_history)"
            注释 = "DL-Expansion-History" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Bcc <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_bcc)"
            注释 = "Downgraded-Bcc" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Cc <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_cc)" 注释 = "Downgraded-Cc"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Disposition_Notification_To <公开
            值 = @"@static_cast<INT>(asio2::http::field::downgraded_disposition_notification_to)"
            注释 = "Downgraded-Disposition-Notification-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Final_Recipient <公开
            值 = @"@static_cast<INT>(asio2::http::field::downgraded_final_recipient)"
            注释 = "Downgraded-Final-Recipient" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_From <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_from)"
            注释 = "Downgraded-From" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_In_Reply_To <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_in_reply_to)"
            注释 = "Downgraded-In-Reply-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Mail_From <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_mail_from)"
            注释 = "Downgraded-Mail-From" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Message_Id <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_message_id)"
            注释 = "Downgraded-Message-Id" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Original_Recipient <公开
            值 = @"@static_cast<INT>(asio2::http::field::downgraded_original_recipient)"
            注释 = "Downgraded-Original-Recipient" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Rcpt_To <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_rcpt_to)"
            注释 = "Downgraded-Rcpt-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_References <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_references)"
            注释 = "Downgraded-References" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Reply_To <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_reply_to)"
            注释 = "Downgraded-Reply-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Resent_Bcc <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_resent_bcc)"
            注释 = "Downgraded-Resent-Bcc" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Resent_Cc <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_resent_cc)"
            注释 = "Downgraded-Resent-Cc" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Resent_From <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_resent_from)"
            注释 = "Downgraded-Resent-From" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Resent_Reply_To <公开
            值 = @"@static_cast<INT>(asio2::http::field::downgraded_resent_reply_to)"
            注释 = "Downgraded-Resent-Reply-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Resent_Sender <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_resent_sender)"
            注释 = "Downgraded-Resent-Sender" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Resent_To <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_resent_to)"
            注释 = "Downgraded-Resent-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Return_Path <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_return_path)"
            注释 = "Downgraded-Return-Path" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_Sender <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_sender)"
            注释 = "Downgraded-Sender" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Downgraded_To <公开 值 = @"@static_cast<INT>(asio2::http::field::downgraded_to)" 注释 = "Downgraded-To"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 EDIINT_Features <公开 值 = @"@static_cast<INT>(asio2::http::field::ediint_features)"
            注释 = "EDIINT-Features" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Eesst_Version <公开 值 = @"@static_cast<INT>(asio2::http::field::eesst_version)" 注释 = "Eesst-Version"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Encoding <公开 值 = @"@static_cast<INT>(asio2::http::field::encoding)" 注释 = "Encoding"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Encrypted <公开 值 = @"@static_cast<INT>(asio2::http::field::encrypted)" 注释 = "Encrypted"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Errors_To <公开 值 = @"@static_cast<INT>(asio2::http::field::errors_to)" 注释 = "Errors-To"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 ETag <公开 值 = @"@static_cast<INT>(asio2::http::field::etag)" 注释 = "ETag" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Expect <公开 值 = @"@static_cast<INT>(asio2::http::field::expect)" 注释 = "Expect"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Expires <公开 值 = @"@static_cast<INT>(asio2::http::field::expires)" 注释 = "Expires"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Expiry_Date <公开 值 = @"@static_cast<INT>(asio2::http::field::expiry_date)" 注释 = "Expiry-Date"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Ext <公开 值 = @"@static_cast<INT>(asio2::http::field::ext)" 注释 = "Ext" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Followup_To <公开 值 = @"@static_cast<INT>(asio2::http::field::followup_to)" 注释 = "Followup-To"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Forwarded <公开 值 = @"@static_cast<INT>(asio2::http::field::forwarded)" 注释 = "Forwarded"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 From <公开 值 = @"@static_cast<INT>(asio2::http::field::from)" 注释 = "From" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Generate_Delivery_Report <公开 值 = @"@static_cast<INT>(asio2::http::field::generate_delivery_report)"
            注释 = "Generate-Delivery-Report" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 GetProfile <公开 值 = @"@static_cast<INT>(asio2::http::field::getprofile)" 注释 = "GetProfile"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Hobareg <公开 值 = @"@static_cast<INT>(asio2::http::field::hobareg)" 注释 = "Hobareg"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Host <公开 值 = @"@static_cast<INT>(asio2::http::field::host)" 注释 = "Host" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 HTTP2_Settings <公开 值 = @"@static_cast<INT>(asio2::http::field::http2_settings)"
            注释 = "HTTP2-Settings" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 If <公开 值 = @"@static_cast<INT>(asio2::http::field::if_)" 注释 = "If" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 If_Match <公开 值 = @"@static_cast<INT>(asio2::http::field::if_match)" 注释 = "If-Match"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 If_Modified_Since <公开 值 = @"@static_cast<INT>(asio2::http::field::if_modified_since)"
            注释 = "If-Modified-Since" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 If_None_Match <公开 值 = @"@static_cast<INT>(asio2::http::field::if_none_match)" 注释 = "If-None-Match"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 If_Range <公开 值 = @"@static_cast<INT>(asio2::http::field::if_range)" 注释 = "If-Range"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 If_Schedule_Tag_Match <公开 值 = @"@static_cast<INT>(asio2::http::field::if_schedule_tag_match)"
            注释 = "If-Schedule-Tag-Match" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 If_Unmodified_Since <公开 值 = @"@static_cast<INT>(asio2::http::field::if_unmodified_since)"
            注释 = "If-Unmodified-Since" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 IM <公开 值 = @"@static_cast<INT>(asio2::http::field::im)" 注释 = "IM" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Importance <公开 值 = @"@static_cast<INT>(asio2::http::field::importance)" 注释 = "Importance"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 In_Reply_To <公开 值 = @"@static_cast<INT>(asio2::http::field::in_reply_to)" 注释 = "In-Reply-To"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Incomplete_Copy <公开 值 = @"@static_cast<INT>(asio2::http::field::incomplete_copy)"
            注释 = "Incomplete-Copy" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Injection_Date <公开 值 = @"@static_cast<INT>(asio2::http::field::injection_date)"
            注释 = "Injection-Date" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Injection_Info <公开 值 = @"@static_cast<INT>(asio2::http::field::injection_info)"
            注释 = "Injection-Info" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Jabber_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::jabber_id)" 注释 = "Jabber-ID"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Keep_Alive <公开 值 = @"@static_cast<INT>(asio2::http::field::keep_alive)" 注释 = "Keep-Alive"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Keywords <公开 值 = @"@static_cast<INT>(asio2::http::field::keywords)" 注释 = "Keywords"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Label <公开 值 = @"@static_cast<INT>(asio2::http::field::label)" 注释 = "Label" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Language <公开 值 = @"@static_cast<INT>(asio2::http::field::language)" 注释 = "Language"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Last_Modified <公开 值 = @"@static_cast<INT>(asio2::http::field::last_modified)" 注释 = "Last-Modified"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Latest_Delivery_Time <公开 值 = @"@static_cast<INT>(asio2::http::field::latest_delivery_time)"
            注释 = "Latest-Delivery-Time" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Lines <公开 值 = @"@static_cast<INT>(asio2::http::field::lines)" 注释 = "Lines" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Link <公开 值 = @"@static_cast<INT>(asio2::http::field::link)" 注释 = "Link" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_Archive <公开 值 = @"@static_cast<INT>(asio2::http::field::list_archive)" 注释 = "List-Archive"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_Help <公开 值 = @"@static_cast<INT>(asio2::http::field::list_help)" 注释 = "List-Help"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::list_id)" 注释 = "List-ID"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_Owner <公开 值 = @"@static_cast<INT>(asio2::http::field::list_owner)" 注释 = "List-Owner"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_Post <公开 值 = @"@static_cast<INT>(asio2::http::field::list_post)" 注释 = "List-Post"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_Subscribe <公开 值 = @"@static_cast<INT>(asio2::http::field::list_subscribe)"
            注释 = "List-Subscribe" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_Unsubscribe <公开 值 = @"@static_cast<INT>(asio2::http::field::list_unsubscribe)"
            注释 = "List-Unsubscribe" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 List_Unsubscribe_Post <公开 值 = @"@static_cast<INT>(asio2::http::field::list_unsubscribe_post)"
            注释 = "List-Unsubscribe-Post" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Location <公开 值 = @"@static_cast<INT>(asio2::http::field::location)" 注释 = "Location"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Lock_Token <公开 值 = @"@static_cast<INT>(asio2::http::field::lock_token)" 注释 = "Lock-Token"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Man <公开 值 = @"@static_cast<INT>(asio2::http::field::man)" 注释 = "Man" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Max_Forwards <公开 值 = @"@static_cast<INT>(asio2::http::field::max_forwards)" 注释 = "Max-Forwards"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Memento_Datetime <公开 值 = @"@static_cast<INT>(asio2::http::field::memento_datetime)"
            注释 = "Memento-Datetime" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Message_Context <公开 值 = @"@static_cast<INT>(asio2::http::field::message_context)"
            注释 = "Message-Context" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Message_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::message_id)" 注释 = "Message-ID"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Message_Type <公开 值 = @"@static_cast<INT>(asio2::http::field::message_type)" 注释 = "Message-Type"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Meter <公开 值 = @"@static_cast<INT>(asio2::http::field::meter)" 注释 = "Meter" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Method_Check <公开 值 = @"@static_cast<INT>(asio2::http::field::method_check)" 注释 = "Method-Check"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Method_Check_Expires <公开 值 = @"@static_cast<INT>(asio2::http::field::method_check_expires)"
            注释 = "Method-Check-Expires" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MIME_Version <公开 值 = @"@static_cast<INT>(asio2::http::field::mime_version)" 注释 = "MIME-Version"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Acp127_Message_Identifier <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_acp127_message_identifier)"
            注释 = "MMHS-Acp127-Message-Identifier" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Authorizing_Users <公开 值 = @"@static_cast<INT>(asio2::http::field::mmhs_authorizing_users)"
            注释 = "MMHS-Authorizing-Users" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Codress_Message_Indicator <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_codress_message_indicator)"
            注释 = "MMHS-Codress-Message-Indicator" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Copy_Precedence <公开 值 = @"@static_cast<INT>(asio2::http::field::mmhs_copy_precedence)"
            注释 = "MMHS-Copy-Precedence" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Exempted_Address <公开 值 = @"@static_cast<INT>(asio2::http::field::mmhs_exempted_address)"
            注释 = "MMHS-Exempted-Address" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Extended_Authorisation_Info <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_extended_authorisation_info)"
            注释 = "MMHS-Extended-Authorisation-Info" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Handling_Instructions <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_handling_instructions)"
            注释 = "MMHS-Handling-Instructions" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Message_Instructions <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_message_instructions)"
            注释 = "MMHS-Message-Instructions" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Message_Type <公开 值 = @"@static_cast<INT>(asio2::http::field::mmhs_message_type)"
            注释 = "MMHS-Message-Type" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Originator_PLAD <公开 值 = @"@static_cast<INT>(asio2::http::field::mmhs_originator_plad)"
            注释 = "MMHS-Originator-PLAD" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Originator_Reference <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_originator_reference)"
            注释 = "MMHS-Originator-Reference" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Other_Recipients_Indicator_CC <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_other_recipients_indicator_cc)"
            注释 = "MMHS-Other-Recipients-Indicator-CC" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Other_Recipients_Indicator_To <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_other_recipients_indicator_to)"
            注释 = "MMHS-Other-Recipients-Indicator-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Primary_Precedence <公开 值 = @"@static_cast<INT>(asio2::http::field::mmhs_primary_precedence)"
            注释 = "MMHS-Primary-Precedence" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MMHS_Subject_Indicator_Codes <公开
            值 = @"@static_cast<INT>(asio2::http::field::mmhs_subject_indicator_codes)"
            注释 = "MMHS-Subject-Indicator-Codes" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 MT_Priority <公开 值 = @"@static_cast<INT>(asio2::http::field::mt_priority)" 注释 = "MT-Priority"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Negotiate <公开 值 = @"@static_cast<INT>(asio2::http::field::negotiate)" 注释 = "Negotiate"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Newsgroups <公开 值 = @"@static_cast<INT>(asio2::http::field::newsgroups)" 注释 = "Newsgroups"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 NNTP_Posting_Date <公开 值 = @"@static_cast<INT>(asio2::http::field::nntp_posting_date)"
            注释 = "NNTP-Posting-Date" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 NNTP_Posting_Host <公开 值 = @"@static_cast<INT>(asio2::http::field::nntp_posting_host)"
            注释 = "NNTP-Posting-Host" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Non_Compliance <公开 值 = @"@static_cast<INT>(asio2::http::field::non_compliance)"
            注释 = "Non-Compliance" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Obsoletes <公开 值 = @"@static_cast<INT>(asio2::http::field::obsoletes)" 注释 = "Obsoletes"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Opt <公开 值 = @"@static_cast<INT>(asio2::http::field::opt)" 注释 = "Opt" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Optional <公开 值 = @"@static_cast<INT>(asio2::http::field::optional)" 注释 = "Optional"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Optional_WWW_Authenticate <公开
            值 = @"@static_cast<INT>(asio2::http::field::optional_www_authenticate)"
            注释 = "Optional-WWW-Authenticate" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Ordering_Type <公开 值 = @"@static_cast<INT>(asio2::http::field::ordering_type)" 注释 = "Ordering-Type"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Organization <公开 值 = @"@static_cast<INT>(asio2::http::field::organization)" 注释 = "Organization"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Origin <公开 值 = @"@static_cast<INT>(asio2::http::field::origin)" 注释 = "Origin"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Original_Encoded_Information_Types <公开
            值 = @"@static_cast<INT>(asio2::http::field::original_encoded_information_types)"
            注释 = "Original-Encoded-Information-Types" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Original_From <公开 值 = @"@static_cast<INT>(asio2::http::field::original_from)" 注释 = "Original-From"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Original_Message_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::original_message_id)"
            注释 = "Original-Message-ID" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Original_Recipient <公开 值 = @"@static_cast<INT>(asio2::http::field::original_recipient)"
            注释 = "Original-Recipient" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Original_Sender <公开 值 = @"@static_cast<INT>(asio2::http::field::original_sender)"
            注释 = "Original-Sender" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Original_Subject <公开 值 = @"@static_cast<INT>(asio2::http::field::original_subject)"
            注释 = "Original-Subject" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Originator_Return_Address <公开
            值 = @"@static_cast<INT>(asio2::http::field::originator_return_address)"
            注释 = "Originator-Return-Address" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Overwrite <公开 值 = @"@static_cast<INT>(asio2::http::field::overwrite)" 注释 = "Overwrite"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 P3P <公开 值 = @"@static_cast<INT>(asio2::http::field::p3p)" 注释 = "P3P" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Path <公开 值 = @"@static_cast<INT>(asio2::http::field::path)" 注释 = "Path" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 PEP <公开 值 = @"@static_cast<INT>(asio2::http::field::pep)" 注释 = "PEP" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Pep_Info <公开 值 = @"@static_cast<INT>(asio2::http::field::pep_info)" 注释 = "Pep-Info"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 PICS_Label <公开 值 = @"@static_cast<INT>(asio2::http::field::pics_label)" 注释 = "PICS-Label"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Position <公开 值 = @"@static_cast<INT>(asio2::http::field::position)" 注释 = "Position"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Posting_Version <公开 值 = @"@static_cast<INT>(asio2::http::field::posting_version)"
            注释 = "Posting-Version" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Pragma <公开 值 = @"@static_cast<INT>(asio2::http::field::pragma)" 注释 = "Pragma"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Prefer <公开 值 = @"@static_cast<INT>(asio2::http::field::prefer)" 注释 = "Prefer"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Preference_Applied <公开 值 = @"@static_cast<INT>(asio2::http::field::preference_applied)"
            注释 = "Preference-Applied" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Prevent_NonDelivery_Report <公开
            值 = @"@static_cast<INT>(asio2::http::field::prevent_nondelivery_report)"
            注释 = "Prevent-NonDelivery-Report" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Priority <公开 值 = @"@static_cast<INT>(asio2::http::field::priority)" 注释 = "Priority"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Privicon <公开 值 = @"@static_cast<INT>(asio2::http::field::privicon)" 注释 = "Privicon"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 ProfileObject <公开 值 = @"@static_cast<INT>(asio2::http::field::profileobject)" 注释 = "ProfileObject"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Protocol <公开 值 = @"@static_cast<INT>(asio2::http::field::protocol)" 注释 = "Protocol"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Protocol_Info <公开 值 = @"@static_cast<INT>(asio2::http::field::protocol_info)" 注释 = "Protocol-Info"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Protocol_Query <公开 值 = @"@static_cast<INT>(asio2::http::field::protocol_query)"
            注释 = "Protocol-Query" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Protocol_Request <公开 值 = @"@static_cast<INT>(asio2::http::field::protocol_request)"
            注释 = "Protocol-Request" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Proxy_Authenticate <公开 值 = @"@static_cast<INT>(asio2::http::field::proxy_authenticate)"
            注释 = "Proxy-Authenticate" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Proxy_Authentication_Info <公开
            值 = @"@static_cast<INT>(asio2::http::field::proxy_authentication_info)"
            注释 = "Proxy-Authentication-Info" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Proxy_Authorization <公开 值 = @"@static_cast<INT>(asio2::http::field::proxy_authorization)"
            注释 = "Proxy-Authorization" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Proxy_Connection <公开 值 = @"@static_cast<INT>(asio2::http::field::proxy_connection)"
            注释 = "Proxy-Connection" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Proxy_Features <公开 值 = @"@static_cast<INT>(asio2::http::field::proxy_features)"
            注释 = "Proxy-Features" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Proxy_Instruction <公开 值 = @"@static_cast<INT>(asio2::http::field::proxy_instruction)"
            注释 = "Proxy-Instruction" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Public <公开 值 = @"@static_cast<INT>(asio2::http::field::public_)" 注释 = "Public"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Public_Key_Pins <公开 值 = @"@static_cast<INT>(asio2::http::field::public_key_pins)"
            注释 = "Public-Key-Pins" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Public_Key_Pins_Report_Only <公开
            值 = @"@static_cast<INT>(asio2::http::field::public_key_pins_report_only)"
            注释 = "Public-Key-Pins-Report-Only" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Range <公开 值 = @"@static_cast<INT>(asio2::http::field::range)" 注释 = "Range" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Received <公开 值 = @"@static_cast<INT>(asio2::http::field::received)" 注释 = "Received"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Received_SPF <公开 值 = @"@static_cast<INT>(asio2::http::field::received_spf)" 注释 = "Received-SPF"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Redirect_Ref <公开 值 = @"@static_cast<INT>(asio2::http::field::redirect_ref)" 注释 = "Redirect-Ref"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 References <公开 值 = @"@static_cast<INT>(asio2::http::field::references)" 注释 = "References"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Referer <公开 值 = @"@static_cast<INT>(asio2::http::field::referer)" 注释 = "Referer"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Referer_Root <公开 值 = @"@static_cast<INT>(asio2::http::field::referer_root)" 注释 = "Referer-Root"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Relay_Version <公开 值 = @"@static_cast<INT>(asio2::http::field::relay_version)" 注释 = "Relay-Version"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Reply_By <公开 值 = @"@static_cast<INT>(asio2::http::field::reply_by)" 注释 = "Reply-By"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Reply_To <公开 值 = @"@static_cast<INT>(asio2::http::field::reply_to)" 注释 = "Reply-To"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Require_Recipient_Valid_Since <公开
            值 = @"@static_cast<INT>(asio2::http::field::require_recipient_valid_since)"
            注释 = "Require-Recipient-Valid-Since" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_Bcc <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_bcc)" 注释 = "Resent-Bcc"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_Cc <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_cc)" 注释 = "Resent-Cc"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_Date <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_date)" 注释 = "Resent-Date"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_From <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_from)" 注释 = "Resent-From"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_Message_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_message_id)"
            注释 = "Resent-Message-ID" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_Reply_To <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_reply_to)"
            注释 = "Resent-Reply-To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_Sender <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_sender)" 注释 = "Resent-Sender"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resent_To <公开 值 = @"@static_cast<INT>(asio2::http::field::resent_to)" 注释 = "Resent-To"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resolution_Hint <公开 值 = @"@static_cast<INT>(asio2::http::field::resolution_hint)"
            注释 = "Resolution-Hint" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Resolver_Location <公开 值 = @"@static_cast<INT>(asio2::http::field::resolver_location)"
            注释 = "Resolver-Location" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Retry_After <公开 值 = @"@static_cast<INT>(asio2::http::field::retry_after)" 注释 = "Retry-After"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Return_Path <公开 值 = @"@static_cast<INT>(asio2::http::field::return_path)" 注释 = "Return-Path"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Safe <公开 值 = @"@static_cast<INT>(asio2::http::field::safe)" 注释 = "Safe" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Schedule_Reply <公开 值 = @"@static_cast<INT>(asio2::http::field::schedule_reply)"
            注释 = "Schedule-Reply" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Schedule_Tag <公开 值 = @"@static_cast<INT>(asio2::http::field::schedule_tag)" 注释 = "Schedule-Tag"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_Fetch_Dest <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_fetch_dest)"
            注释 = "Sec-Fetch-Dest" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_Fetch_Mode <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_fetch_mode)"
            注释 = "Sec-Fetch-Mode" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_Fetch_Site <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_fetch_site)"
            注释 = "Sec-Fetch-Site" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_Fetch_User <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_fetch_user)"
            注释 = "Sec-Fetch-User" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_WebSocket_Accept <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_websocket_accept)"
            注释 = "Sec-WebSocket-Accept" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_WebSocket_Extensions <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_websocket_extensions)"
            注释 = "Sec-WebSocket-Extensions" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_WebSocket_Key <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_websocket_key)"
            注释 = "Sec-WebSocket-Key" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_WebSocket_Protocol <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_websocket_protocol)"
            注释 = "Sec-WebSocket-Protocol" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sec_WebSocket_Version <公开 值 = @"@static_cast<INT>(asio2::http::field::sec_websocket_version)"
            注释 = "Sec-WebSocket-Version" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Security_Scheme <公开 值 = @"@static_cast<INT>(asio2::http::field::security_scheme)"
            注释 = "Security-Scheme" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 See_Also <公开 值 = @"@static_cast<INT>(asio2::http::field::see_also)" 注释 = "See-Also"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sender <公开 值 = @"@static_cast<INT>(asio2::http::field::sender)" 注释 = "Sender"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Sensitivity <公开 值 = @"@static_cast<INT>(asio2::http::field::sensitivity)" 注释 = "Sensitivity"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Server <公开 值 = @"@static_cast<INT>(asio2::http::field::server)" 注释 = "Server"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Set_Cookie <公开 值 = @"@static_cast<INT>(asio2::http::field::set_cookie)" 注释 = "Set-Cookie"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Set_Cookie2 <公开 值 = @"@static_cast<INT>(asio2::http::field::set_cookie2)" 注释 = "Set-Cookie2"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 SetProfile <公开 值 = @"@static_cast<INT>(asio2::http::field::setprofile)" 注释 = "SetProfile"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 SIO_Label <公开 值 = @"@static_cast<INT>(asio2::http::field::sio_label)" 注释 = "SIO-Label"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 SIO_Label_History <公开 值 = @"@static_cast<INT>(asio2::http::field::sio_label_history)"
            注释 = "SIO-Label-History" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 SLUG <公开 值 = @"@static_cast<INT>(asio2::http::field::slug)" 注释 = "SLUG" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 SoapAction <公开 值 = @"@static_cast<INT>(asio2::http::field::soapaction)" 注释 = "SoapAction"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Solicitation <公开 值 = @"@static_cast<INT>(asio2::http::field::solicitation)" 注释 = "Solicitation"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Status_URI <公开 值 = @"@static_cast<INT>(asio2::http::field::status_uri)" 注释 = "Status-URI"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Strict_Transport_Security <公开
            值 = @"@static_cast<INT>(asio2::http::field::strict_transport_security)"
            注释 = "Strict-Transport-Security" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Subject <公开 值 = @"@static_cast<INT>(asio2::http::field::subject)" 注释 = "Subject"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 SubOK <公开 值 = @"@static_cast<INT>(asio2::http::field::subok)" 注释 = "SubOK" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Subst <公开 值 = @"@static_cast<INT>(asio2::http::field::subst)" 注释 = "Subst" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Summary <公开 值 = @"@static_cast<INT>(asio2::http::field::summary)" 注释 = "Summary"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Supersedes <公开 值 = @"@static_cast<INT>(asio2::http::field::supersedes)" 注释 = "Supersedes"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Surrogate_Capability <公开 值 = @"@static_cast<INT>(asio2::http::field::surrogate_capability)"
            注释 = "Surrogate-Capability" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Surrogate_Control <公开 值 = @"@static_cast<INT>(asio2::http::field::surrogate_control)"
            注释 = "Surrogate-Control" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 TCN <公开 值 = @"@static_cast<INT>(asio2::http::field::tcn)" 注释 = "TCN" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 TE <公开 值 = @"@static_cast<INT>(asio2::http::field::te)" 注释 = "TE" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Timeout <公开 值 = @"@static_cast<INT>(asio2::http::field::timeout)" 注释 = "Timeout"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Title <公开 值 = @"@static_cast<INT>(asio2::http::field::title)" 注释 = "Title" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 To <公开 值 = @"@static_cast<INT>(asio2::http::field::to)" 注释 = "To" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Topic <公开 值 = @"@static_cast<INT>(asio2::http::field::topic)" 注释 = "Topic" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Trailer <公开 值 = @"@static_cast<INT>(asio2::http::field::trailer)" 注释 = "Trailer"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Transfer_Encoding <公开 值 = @"@static_cast<INT>(asio2::http::field::transfer_encoding)"
            注释 = "Transfer-Encoding" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 TTL <公开 值 = @"@static_cast<INT>(asio2::http::field::ttl)" 注释 = "TTL" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 UA_Color <公开 值 = @"@static_cast<INT>(asio2::http::field::ua_color)" 注释 = "UA-Color"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 UA_Media <公开 值 = @"@static_cast<INT>(asio2::http::field::ua_media)" 注释 = "UA-Media"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 UA_Pixels <公开 值 = @"@static_cast<INT>(asio2::http::field::ua_pixels)" 注释 = "UA-Pixels"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 UA_Resolution <公开 值 = @"@static_cast<INT>(asio2::http::field::ua_resolution)" 注释 = "UA-Resolution"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 UA_Windowpixels <公开 值 = @"@static_cast<INT>(asio2::http::field::ua_windowpixels)"
            注释 = "UA-Windowpixels" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Upgrade <公开 值 = @"@static_cast<INT>(asio2::http::field::upgrade)" 注释 = "Upgrade"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Urgency <公开 值 = @"@static_cast<INT>(asio2::http::field::urgency)" 注释 = "Urgency"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 URI <公开 值 = @"@static_cast<INT>(asio2::http::field::uri)" 注释 = "URI" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 User_Agent <公开 值 = @"@static_cast<INT>(asio2::http::field::user_agent)" 注释 = "User-Agent"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Variant_Vary <公开 值 = @"@static_cast<INT>(asio2::http::field::variant_vary)" 注释 = "Variant-Vary"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Vary <公开 值 = @"@static_cast<INT>(asio2::http::field::vary)" 注释 = "Vary" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 VBR_Info <公开 值 = @"@static_cast<INT>(asio2::http::field::vbr_info)" 注释 = "VBR-Info"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Version <公开 值 = @"@static_cast<INT>(asio2::http::field::version)" 注释 = "Version"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Via <公开 值 = @"@static_cast<INT>(asio2::http::field::via)" 注释 = "Via" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Want_Digest <公开 值 = @"@static_cast<INT>(asio2::http::field::want_digest)" 注释 = "Want-Digest"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Warning <公开 值 = @"@static_cast<INT>(asio2::http::field::warning)" 注释 = "Warning"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 WWW_Authenticate <公开 值 = @"@static_cast<INT>(asio2::http::field::www_authenticate)"
            注释 = "WWW-Authenticate" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Archived_At <公开 值 = @"@static_cast<INT>(asio2::http::field::x_archived_at)" 注释 = "X-Archived-At"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Device_Accept <公开 值 = @"@static_cast<INT>(asio2::http::field::x_device_accept)"
            注释 = "X-Device-Accept" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Device_Accept_Charset <公开 值 = @"@static_cast<INT>(asio2::http::field::x_device_accept_charset)"
            注释 = "X-Device-Accept-Charset" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Device_Accept_Encoding <公开 值 = @"@static_cast<INT>(asio2::http::field::x_device_accept_encoding)"
            注释 = "X-Device-Accept-Encoding" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Device_Accept_Language <公开 值 = @"@static_cast<INT>(asio2::http::field::x_device_accept_language)"
            注释 = "X-Device-Accept-Language" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Device_User_Agent <公开 值 = @"@static_cast<INT>(asio2::http::field::x_device_user_agent)"
            注释 = "X-Device-User-Agent" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Frame_Options <公开 值 = @"@static_cast<INT>(asio2::http::field::x_frame_options)"
            注释 = "X-Frame-Options" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Mittente <公开 值 = @"@static_cast<INT>(asio2::http::field::x_mittente)" 注释 = "X-Mittente"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_PGP_Sig <公开 值 = @"@static_cast<INT>(asio2::http::field::x_pgp_sig)" 注释 = "X-PGP-Sig"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Ricevuta <公开 值 = @"@static_cast<INT>(asio2::http::field::x_ricevuta)" 注释 = "X-Ricevuta"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Riferimento_Message_ID <公开 值 = @"@static_cast<INT>(asio2::http::field::x_riferimento_message_id)"
            注释 = "X-Riferimento-Message-ID" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_TipoRicevuta <公开 值 = @"@static_cast<INT>(asio2::http::field::x_tiporicevuta)"
            注释 = "X-TipoRicevuta" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_Trasporto <公开 值 = @"@static_cast<INT>(asio2::http::field::x_trasporto)" 注释 = "X-Trasporto"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X_VerificaSicurezza <公开 值 = @"@static_cast<INT>(asio2::http::field::x_verificasicurezza)"
            注释 = "X-VerificaSicurezza" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_Content_Identifier <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_content_identifier)"
            注释 = "X400-Content-Identifier" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_Content_Return <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_content_return)"
            注释 = "X400-Content-Return" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_Content_Type <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_content_type)"
            注释 = "X400-Content-Type" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_MTS_Identifier <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_mts_identifier)"
            注释 = "X400-MTS-Identifier" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_Originator <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_originator)"
            注释 = "X400-Originator" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_Received <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_received)" 注释 = "X400-Received"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_Recipients <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_recipients)"
            注释 = "X400-Recipients" 编辑时信息 = "0, 6A0E3, 0, 0">
    常量 X400_Trace <公开 值 = @"@static_cast<INT>(asio2::http::field::x400_trace)" 注释 = "X400-Trace"
            编辑时信息 = "0, 6A0E3, 0, 0">
    常量 Xref <公开 值 = @"@static_cast<INT>(asio2::http::field::xref)" 注释 = "Xref" 编辑时信息 = "0, 6A0E3, 0, 0">

    #
}
